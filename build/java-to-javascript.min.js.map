{"version":3,"sources":["java-to-javascript.js"],"names":["f","exports","module","define","amd","window","global","self","this","javaToJavascript","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","from","_iterableToArray","TypeError","_nonIterableSpread","beautify","JavaAST","p5_options","DEFAULT_OPTIONS","globalVars","globalScope","separator","opts","literalInitializers","int","float","double","short","long","char","boolean","SEP","unhandledNode","node","more","arguments","undefined","console","error","concat","varToString","_ref","noLet","name","value","type","final","parseType","identifier","primitiveTypeCode","parseModifiers","modifiers","mods","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","keyword","err","return","parseClass","class_","isGlobal","abstract","interface","classData","superclass","superclassType","classes","vars","methods","classVarsMap","assignParent","mapped","newName","parseExpr","expr","booleanValue","num","token","replace","test","substring","slice","escapedValue","charCodeAt","startsWith","parseInt","expression","thenExpression","elseExpression","qualifier","leftHandSide","operator","rightHandSide","op","leftOperand","rightOperand","args","map","operand","parseFieldVars","expressions","asdds","size","array","index","field","data","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fragments","frag","push","assign","initializer","parseStatement","stat","ifBlock","parseBlock","thenStatement","elseStatement","body","initializers","join","updaters","parameter","label","switchStats","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","statements","statStr","endsWith","message","tryBlock","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","catchClauses","clause","exception","finally","block","semicolon","str","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","apply","parseMethod","method","parameters","constructor","static","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","param","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","bodyDeclarations","_classData$vars","dec","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","var_","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_dec","classToJs","_ref2","className","initVars","classProps","staticVars","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","addedConstructor","addMethod","_ref3","addInitVars","static_","preblock","methodMap","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_meth","_safeName","safeName","paramMap","paramCounts","keys","first","cases","_i","paramCount","meth","unshift","javaString","javaAST","jsString","_ref4","stats","options","progress","ugly","p5","parse","location","start","line","types","_ref5","globalClass","js_beautify","indent_size","./p5_options","js-beautify/js/lib/beautify","2","modules","installedModules","__webpack_require__","moduleId","l","m","d","getter","defineProperty","enumerable","get","toStringTag","mode","__esModule","ns","create","key","bind","object","property","hasOwnProperty","s","Beautifier","js_source_text","mergeOpts","normalizeOpts","acorn","Output","Tokenizer","TOKEN","remove_redundant_indentation","output","frame","multiline_frame","MODE","ForInitializer","Conditional","remove_indent","start_line_index","in_array","what","indexOf","validPositionValues","OPERATOR_POSITION","list","result","x","generateMapFromStrings","OPERATOR_POSITION_BEFORE_OR_PRESERVE","before_newline","preserve_newline","BlockStatement","Statement","ObjectLiteral","ArrayLiteral","Expression","source_text","tokens","tokenizer","current_token","last_type","last_last_text","flags","previous_flags","flag_store","handlers","opt","create_flags","flags_base","next_indent_level","indentation_level","just_added_newline","line_indent_level","parent","last_text","last_word","declaration_statement","declaration_assignment","inline_frame","if_block","else_block","do_block","do_while","import_block","in_case_statement","in_case","case_body","get_line_number","ternary_depth","_source_text","START_EXPR","start_of_statement","handle_whitespace_and_comments","next_mode","text","WORD","RESERVED","line_starters","space_before_token","set_mode","print_token","indent","space_in_paren","is_array","keep_array_indentation","print_newline","END_EXPR","OPERATOR","space_before_conditional","whitespace_before","EQUALS","start_of_object_property","allow_wrap_or_preserved_newline","space_after_anon_function","START_BLOCK","END_BLOCK","COMMA","newlines","restore_mode","space_in_empty_paren","trim","next_token","peek","second_token","STRING","empty_anonymous_function","comments_before","brace_preserve_inline","check_token","EOF","opened","brace_style","is_special_word","empty_braces","handle_word","SEMICOLON","isGeneratorAsterisk","isUnary","preserve_statement_flags","DOT","operator_position","space_before","space_after","in_ternary","preserve_newlines","positionable_operators","isColon","isTernaryColon","isOtherColon","after_newline","is_expression","comma_first","BLOCK_COMMENT","raw","add_raw_token","directives","preserve","test_output_raw","newline","j","lines","allLineBreaks","out","idx","split_linebreaks","javadoc","starless","lastIndent","lastIndentLength","charAt","all_lines_start_with","len","each_line_matches_indent","add_token","COMMENT","unindent_chained_methods","deindent","break_chained_methods","UNKNOWN","braces_on_own_line","brace_style_split","split","bs","local_token","keep_whitespace","temp_token","max_preserve_newlines","indent_char","eol","jslint_happy","unescape_strings","wrap_line_length","e4x","end_with_newline","opPosition","sanitizeOperatorPosition","disabled","indent_with_tabs","_reset","baseIndentString","indent_string","preindent_index","tokenize","lineBreak","match","get_code","newline_restricted_tokens","force_linewrap","shouldPreserveOrForce","shouldPrintOperatorNewline","current_line","get_character_count","force_newline","add_new_line","print_token_line_indentation","set_indent","printable_token","previous_line","last","popped","pop","is_empty","word","just_added_blankline","prefix","allOptions","childFieldName","finalOpts","convertedOpts","baseASCIIidentifierStartChars","nonASCIIidentifierStartChars","baseASCIIidentifierChars","nonASCIIidentifierChars","identifierStart","RegExp","identifierChars","source","isIdentifierStart","String","fromCharCode","isIdentifierChar","OutputLine","__parent","__character_count","__indent_count","__alignment_count","__items","IndentCache","base_string","level_string","__cache","__level_string","__indent_cache","__alignment_cache","baseIndentLength","indent_length","__lines","__add_outputline","item","has_match","pattern","lastCheckedOutput","alignment","push_raw","last_newline_index","lastIndexOf","get_indent_string","get_alignment_string","__ensure_cache","level","get_level_string","sweet_code","add_space_before_token","output_length","eat_newlines","ensure_empty_line_above","starts_with","ends_with","potentialEmptyLine","splice","InputScanner","BaseTokenizer","BASETOKEN","Directives","START","RAW","directives_core","number_pattern","digit","dot_pattern","punct","in_html_comment","punct_pattern","reserved_words","reserved_word_pattern","block_comment_pattern","comment_pattern","template_pattern","input_string","_is_comment","_is_opening","_is_closing","open_token","_get_next_token","previous_token","_readWhitespace","_input","_read_singles","_read_word","_read_comment","_read_string","_read_regexp","_read_xml","_read_non_javascript","_read_punctuation","_create_token","resulting_string","read","_is_first_token","hasNext","sharp","testChar","back","comment","get_directives","ignore","readIgnored","has_char_escapes","_read_string_recursive","_options","escaped","input_scan","matched","unescape_string","_allow_regexp_or_xml","previous","esc","in_char_class","startXmlRegExp","xmlRegExp","xmlStr","rootTag","isCurlyRoot","depth","isEndTag","tagName","delimiter","allow_unescaped_newlines","start_sub","current_char","__input","__input_length","__position","restart","val","lastIndex","pattern_match","exec","readUntil","include_match","match_index","readUntilAfter","peekUntilAfter","lookBack","testVal","toLowerCase","Token","TokenStream","__tokens","__newline_count","__whitespace_before_token","_whitespace_pattern","_newline_pattern","current","open_stack","comments","add","isEmpty","closed","nextMatch","parent_token","__tokens_length","__parent_token","start_block_pattern","end_block_pattern","__directives_block_pattern","__directive_pattern","__directives_end_ignore_pattern","directive_match","input","3","_globalVars","_defineProperty","obj","configurable","writable","pushMatrix","popMatrix","println","alpha","blue","brightness","color","green","hue","lerpColor","lightness","red","saturation","background","clear","colorMode","fill","noFill","noStroke","stroke","arc","ellipse","point","quad","rect","triangle","ellipseMode","noSmooth","rectMode","smooth","strokeCap","strokeJoin","strokeWeight","bezier","bezierDetail","bezierPoint","bezierTangent","curve","curveDetail","curveTightness","curvePoint","curveTangent","beginContour","beginShape","bezierVertex","curveVertex","endContour","endShape","quadraticVertex","vertex","loadModel","model","plane","box","sphere","cylinder","cone","ellipsoid","torus","preload","setup","draw","remove","noLoop","loop","redraw","print","cursor","frameRate","noCursor","windowResized","fullscreen","pixelDensity","displayDensity","getURL","getURLPath","getURLParams","resizeCanvas","noCanvas","createGraphics","blendMode","setAttributes","applyMatrix","resetMatrix","rotate","rotateX","rotateY","rotateZ","scale","shearX","shearY","translate","createStringDict","createNumberDict","append","arrayCopy","reverse","shorten","shuffle","sort","subset","byte","unchar","hex","unhex","matchAll","nf","nfc","nfp","nfs","splitTokens","setMoveThreshold","setShakeThreshold","deviceMoved","deviceTurned","deviceShaken","keyPressed","keyReleased","keyTyped","keyIsDown","mouseMoved","mouseDragged","mousePressed","mouseReleased","mouseClicked","doubleClicked","mouseWheel","touchStarted","touchMoved","touchEnded","createImage","saveCanvas","saveFrames","loadImage","image","tint","noTint","imageMode","blend","copy","filter","loadPixels","set","updatePixels","loadJSON","loadStrings","loadTable","loadXML","loadBytes","httpGet","httpPost","httpDo","createWriter","save","saveJSON","saveStrings","saveTable","day","hour","minute","millis","month","second","year","createVector","abs","ceil","constrain","dist","exp","floor","lerp","log","mag","max","min","norm","pow","round","sq","sqrt","noise","noiseDetail","noiseSeed","randomSeed","random","randomGaussian","acos","asin","atan","atan2","cos","sin","tan","degrees","radians","angleMode","textAlign","textLeading","textSize","textStyle","textWidth","textAscent","textDescent","loadFont","textFont","camera","perspective","ortho","orbitControl","ambientLight","directionalLight","pointLight","loadShader","createShader","shader","normalMaterial","texture","ambientMaterial","specularMaterial","Graphics","Vector3","HALF_PI","PI","QUARTER_PI","TAU","TWO_PI","DEGREES","RADIANS","LEFT","CENTER","RIGHT","TOP","BOTTOM","BASELINE","P2D","WEBGL","SQUARE","PROJECT","ROUND","MITER","BEVEL"],"mappings":"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","file":"java-to-javascript.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.javaToJavascript = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @module java-to-javascript\n */\nvar beautify = require('js-beautify/js/lib/beautify');\n\nvar JavaAST = require('./javaAST' + ''); // HACK to avoid intellisense on this file\n\n\nvar p5_options = require('./p5_options');\n\nvar DEV = \"production\" === 'development';\nvar DEFAULT_OPTIONS = {\n  globalVars: {},\n  globalScope: null,\n  separator: '\\n\\n'\n};\nvar opts = {};\nvar literalInitializers = {\n  int: '0',\n  float: '0',\n  double: '0',\n  short: '0',\n  long: '0',\n  char: '\\'\\'',\n  boolean: 'false'\n};\nvar SEP = '$';\n\nvar unhandledNode = function unhandledNode(node) {\n  var more = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (DEV) throw node;else console.error(\"Unhandled node: \".concat(node.node, \". \").concat(more));\n  return '';\n};\n\nvar joinStatements = function joinStatements(stats) {\n  return \"\".concat(stats.join(';')).concat(stats.length ? ';' : '');\n};\n\nvar varToString = function varToString(_ref, noLet) {\n  var name = _ref.name,\n      value = _ref.value,\n      type = _ref.type,\n      final = _ref.final;\n  if (value === undefined) value = literalInitializers[type] || 'null';\n  return \"\".concat(noLet !== true ? final ? 'const ' : 'let ' : '').concat(name, \" = \").concat(value);\n};\n\nvar parseType = function parseType(type) {\n  if (type.node === 'ArrayType') return 'Array'; // Doesn't matter what we return, we don't use it\n  else if (type.node === 'SimpleType') return type.name.identifier;else if (type.node === 'PrimitiveType') return type.primitiveTypeCode;else if (type.node === 'ParameterizedType') return parseType(type.type);else return unhandledNode(type);\n};\n\nvar parseModifiers = function parseModifiers(modifiers) {\n  var mods = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = modifiers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var mod = _step.value;\n      mods[mod.keyword] = true;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return mods;\n};\n\nvar parseClass = function parseClass(class_, isGlobal) {\n  var modifiers = parseModifiers(class_.modifiers);\n  if (modifiers.abstract || class_.interface) return {\n    abstract: true\n  };\n  var classData = {\n    name: class_.name.identifier,\n    superclass: class_.superclassType && parseType(class_.superclassType),\n    classes: [],\n    vars: [],\n    methods: []\n  };\n  var classVarsMap = {};\n\n  var assignParent = function assignParent(name) {\n    if (name in classVarsMap) return \"this.\".concat(name);\n    var mapped = opts.globalVars[name];\n\n    if (mapped) {\n      var newName = typeof mapped === 'string' ? mapped : name;\n      return opts.globalScope ? \"\".concat(opts.globalScope, \".\").concat(newName) : newName;\n    }\n\n    return name;\n  };\n\n  var parseExpr = function parseExpr(expr) {\n    if (!expr) return undefined;\n\n    switch (expr.node) {\n      case 'ThisExpression':\n        return 'this';\n\n      case 'NullLiteral':\n        return 'null';\n\n      case 'BooleanLiteral':\n        return expr.booleanValue;\n\n      case 'NumberLiteral':\n        var num = expr.token;\n        num = num.replace(/_/g, '');\n        if (/^0\\d+$/.test(num)) num = '0o' + num.substring(1);else if (/[lfd]$/i.test(num)) num = num.slice(0, -1);\n        return num;\n\n      case 'StringLiteral':\n        return expr.escapedValue.replace(/'/g, '\\\\\\'').replace(/\"/g, '\\'');\n\n      case 'CharacterLiteral':\n        var char = expr.escapedValue.slice(1, -1);\n        if (char.length === 1) return char.charCodeAt(0).toString();else if (char.startsWith(\"\\\\u\")) return parseInt(char.substring(2), 16).toString();else return unhandledNode(expr, 'Weird char: ' + char);\n      // return expr.escapedValue.charCodeAt(1).toString(); // equivalent to: `'z'.charCodeAt(0)`\n\n      case 'CastExpression':\n        // TODO: use expr.type to convert?\n        return parseExpr(expr.expression);\n\n      case 'ConditionalExpression':\n        return \"\".concat(parseExpr(expr.expression), \" ? \").concat(parseExpr(expr.thenExpression), \" : \").concat(parseExpr(expr.elseExpression));\n\n      case 'SimpleName':\n        return assignParent(expr.identifier);\n\n      case 'QualifiedName':\n        return \"\".concat(parseExpr(expr.qualifier), \".\").concat(expr.name.identifier);\n\n      case 'FieldAccess':\n        return \"\".concat(parseExpr(expr.expression), \".\").concat(expr.name.identifier);\n\n      case 'Assignment':\n        return \"\".concat(parseExpr(expr.leftHandSide), \" \").concat(expr.operator, \" \").concat(parseExpr(expr.rightHandSide));\n\n      case 'InfixExpression':\n        var op = expr.operator;\n        if (op === '!=' || op === '==') op += '='; // triple equals in JS\n\n        return \"\".concat(parseExpr(expr.leftOperand), \" \").concat(op, \" \").concat(parseExpr(expr.rightOperand));\n\n      case 'MethodInvocation':\n        var args = \"(\".concat(expr.arguments.map(parseExpr), \")\");\n        if (expr.expression) return \"\".concat(parseExpr(expr.expression), \".\").concat(expr.name.identifier).concat(args);\n        return \"\".concat(assignParent(expr.name.identifier)).concat(args);\n\n      case 'InstanceofExpression':\n        return \"\".concat(parseExpr(expr.leftOperand), \" instanceof \").concat(parseType(expr.rightOperand));\n\n      case 'SuperMethodInvocation':\n        return \"super.\".concat(expr.name.identifier, \"(\").concat(expr.arguments.map(parseExpr), \")\");\n\n      case 'ClassInstanceCreation':\n        return \"new \".concat(parseType(expr.type), \"(\").concat(expr.arguments.map(parseExpr), \")\");\n\n      case 'PostfixExpression':\n        return \"\".concat(parseExpr(expr.operand)).concat(expr.operator);\n\n      case 'PrefixExpression':\n        return \"\".concat(expr.operator).concat(parseExpr(expr.operand));\n\n      case 'VariableDeclarationExpression':\n        return \"\".concat(parseFieldVars(expr).map(varToString));\n\n      case 'ArrayInitializer':\n        return \"[\".concat(expr.expressions.map(parseExpr), \"]\");\n\n      case 'ArrayCreation':\n        return \"new Array(\".concat(expr.asdds.size, \")\");\n      // TODO multiple dimensions?\n\n      case 'ArrayAccess':\n        return \"\".concat(expr.array.identifier, \"[\").concat(parseExpr(expr.index), \"]\");\n\n      case 'ParenthesizedExpression':\n        return \"(\".concat(parseExpr(expr.expression), \")\");\n\n      default:\n        return unhandledNode(expr);\n    }\n  };\n\n  var parseFieldVars = function parseFieldVars(field) {\n    var vars = [];\n    var data = parseModifiers(field.modifiers);\n    data.type = parseType(field.type);\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = field.fragments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var frag = _step2.value;\n\n        if (frag.node === 'VariableDeclarationFragment') {\n          vars.push(Object.assign({\n            name: frag.name.identifier,\n            value: parseExpr(frag.initializer)\n          }, data));\n        } else unhandledNode(frag);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return vars;\n  };\n\n  var parseStatement = function parseStatement(stat) {\n    switch (stat.node) {\n      case 'EmptyStatement':\n        return '';\n\n      case 'ExpressionStatement':\n        return parseExpr(stat.expression);\n\n      case 'VariableDeclarationStatement':\n        return parseFieldVars(stat).map(varToString);\n\n      case 'ReturnStatement':\n        return \"return \".concat(parseExpr(stat.expression));\n\n      case 'SuperConstructorInvocation':\n        // TODO stat.expression stat.typeArguments\n        return \"super(\".concat(stat.arguments.map(parseExpr), \")\");\n\n      case 'IfStatement':\n        var ifBlock = \"if(\".concat(parseExpr(stat.expression), \"){\").concat(parseBlock(stat.thenStatement), \"}\");\n        if (stat.elseStatement) ifBlock += \"else{\".concat(parseBlock(stat.elseStatement), \"}\");\n        return ifBlock;\n\n      case 'WhileStatement':\n        return \"while(\".concat(parseExpr(stat.expression), \"){\").concat(parseBlock(stat.body), \"}\");\n\n      case 'DoStatement':\n        return \"do{\".concat(parseBlock(stat.body), \"}while(\").concat(parseExpr(stat.expression), \")\");\n\n      case 'ForStatement':\n        var initializers = stat.initializers.map(parseExpr).join(',');\n        if (stat.initializers.length && stat.initializers[0].node === 'VariableDeclarationExpression') initializers = 'let ' + initializers.replace(/(let|const) /g, '');\n        return \"for(\".concat(initializers, \";\").concat(parseExpr(stat.expression) || '', \";\").concat(stat.updaters.map(parseExpr), \"){\").concat(parseBlock(stat.body), \"}\");\n\n      case 'EnhancedForStatement':\n        return \"for(const \".concat(stat.parameter.name.identifier, \" of \").concat(parseExpr(stat.expression), \"){\").concat(parseBlock(stat.body), \"}\");\n\n      case 'BreakStatement':\n        return \"break \".concat(stat.label ? stat.label.identifier : '');\n\n      case 'ContinueStatement':\n        return \"continue \".concat(stat.label ? stat.label.identifier : '');\n\n      case 'LabeledStatement':\n        return \"\".concat(stat.label.identifier, \":\").concat(parseStatement(stat.body));\n\n      case 'SwitchCase':\n        return \"case \".concat(parseExpr(stat.expression), \":\");\n\n      case 'SwitchStatement':\n        var switchStats = '';\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = stat.statements[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var _stat = _step3.value;\n            var statStr = parseStatement(_stat);\n            switchStats += statStr + (statStr.endsWith(':') ? '' : ';');\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return \"switch(\".concat(parseExpr(stat.expression), \"){\").concat(switchStats, \"}\");\n\n      case 'AssertStatement':\n        return \"if (!(\".concat(parseExpr(stat.expression), \")) throw \").concat(stat.message ? parseExpr(stat.message) : '\\'Assertion Failed\\'');\n\n      case 'ThrowStatement':\n        return \"throw \".concat(parseExpr(stat.expression));\n\n      case 'TryStatement':\n        var tryBlock = \"try{\".concat(parseBlock(stat.body), \"}\");\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = stat.catchClauses[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var clause = _step4.value;\n            tryBlock += \" catch(\".concat(clause.exception.name.identifier, \"){\").concat(parseBlock(clause.body), \"}\");\n          } // TODO handle exception types?\n\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        if (stat.finally) tryBlock += \"finally{\".concat(parseBlock(stat.finally), \"}\");\n        return tryBlock;\n\n      default:\n        return unhandledNode(stat);\n        ;\n    }\n  };\n\n  var parseBlock = function parseBlock(block) {\n    var semicolon = function semicolon(str) {\n      return \"\".concat(str).concat(str.endsWith('}') ? '' : ';');\n    };\n\n    if (block.node !== 'Block') return semicolon(parseStatement(block));\n    var statements = [];\n    var _iteratorNormalCompletion5 = true;\n    var _didIteratorError5 = false;\n    var _iteratorError5 = undefined;\n\n    try {\n      for (var _iterator5 = block.statements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n        var stat = _step5.value;\n        var str = parseStatement(stat);\n        var arr = Array.isArray(str) ? str : [str];\n        statements.push.apply(statements, _toConsumableArray(arr.map(semicolon)));\n      }\n    } catch (err) {\n      _didIteratorError5 = true;\n      _iteratorError5 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n          _iterator5.return();\n        }\n      } finally {\n        if (_didIteratorError5) {\n          throw _iteratorError5;\n        }\n      }\n    }\n\n    return statements.join('');\n  };\n\n  var parseMethod = function parseMethod(method) {\n    var data = Object.assign({\n      name: method.name.identifier,\n      parameters: []\n    }, parseModifiers(method.modifiers));\n\n    if (method.constructor) {\n      data.constructor = true;\n      data.name = 'constructor';\n      data.static = false;\n    }\n\n    var _iteratorNormalCompletion6 = true;\n    var _didIteratorError6 = false;\n    var _iteratorError6 = undefined;\n\n    try {\n      for (var _iterator6 = method.parameters[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n        var param = _step6.value;\n        if (param.node === 'SingleVariableDeclaration') data.parameters.push(param.name.identifier);else unhandledNode(block);\n      }\n    } catch (err) {\n      _didIteratorError6 = true;\n      _iteratorError6 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n          _iterator6.return();\n        }\n      } finally {\n        if (_didIteratorError6) {\n          throw _iteratorError6;\n        }\n      }\n    }\n\n    data.block = parseBlock(method.body);\n    return data;\n  };\n\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = class_.bodyDeclarations[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var dec = _step7.value;\n\n      if (dec.node === 'FieldDeclaration') {\n        var _classData$vars;\n\n        (_classData$vars = classData.vars).push.apply(_classData$vars, _toConsumableArray(parseFieldVars(dec)));\n      } else if (dec.node === 'MethodDeclaration' && !dec.constructor && isGlobal !== true) {\n        classVarsMap[dec.name.identifier] = true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  if (isGlobal !== true) {\n    var _iteratorNormalCompletion8 = true;\n    var _didIteratorError8 = false;\n    var _iteratorError8 = undefined;\n\n    try {\n      for (var _iterator8 = classData.vars[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n        var var_ = _step8.value;\n        classVarsMap[var_.name] = true;\n      }\n    } catch (err) {\n      _didIteratorError8 = true;\n      _iteratorError8 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n          _iterator8.return();\n        }\n      } finally {\n        if (_didIteratorError8) {\n          throw _iteratorError8;\n        }\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = class_.bodyDeclarations[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var _dec = _step9.value;\n      if (_dec.node === 'TypeDeclaration') classData.classes.push(parseClass(_dec));else if (_dec.node === 'MethodDeclaration') classData.methods.push(parseMethod(_dec));else if (_dec.node !== 'FieldDeclaration') unhandledNode(_dec);\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  return classData;\n};\n\nvar classToJs = function classToJs(_ref2) {\n  var className = _ref2.name,\n      vars = _ref2.vars,\n      superclass = _ref2.superclass,\n      methods = _ref2.methods,\n      abstract = _ref2.abstract;\n  if (abstract) return '';\n  var initVars = [];\n  var classProps = [];\n  var staticVars = [];\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = vars[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var var_ = _step10.value;\n      if (var_.value === undefined) var_.value = literalInitializers[var_.type] || 'null';\n      if (var_.static) staticVars.push(\"\".concat(className, \".\").concat(var_.name, \"=\").concat(var_.value, \";\"));else initVars.push(\"this.\".concat(var_.name, \"=\").concat(var_.value, \";\"));\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  var addedConstructor = false;\n\n  var addMethod = function addMethod(_ref3, addInitVars) {\n    var name = _ref3.name,\n        parameters = _ref3.parameters,\n        block = _ref3.block,\n        constructor = _ref3.constructor,\n        static_ = _ref3.static;\n    if (constructor) addedConstructor = true;\n    if (static_) staticVars.push(\"\".concat(className, \".\").concat(name, \"=(\").concat(parameters, \")=>{\").concat(block, \"};\"));else {\n      var preblock = constructor && addInitVars && initVars.length ? initVars.join('') + (block ? opts.separator : '') : '';\n      classProps.push(\"\".concat(name, \"(\").concat(parameters, \"){\").concat(preblock).concat(block, \"}\"));\n    }\n  };\n\n  var methodMap = {};\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    for (var _iterator11 = methods[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var _meth = _step11.value;\n\n      var _safeName = _meth.name + '$$';\n\n      if (!(_safeName in methodMap)) methodMap[_safeName] = {};\n      methodMap[_safeName][_meth.parameters.length] = _meth;\n    }\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n        _iterator11.return();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n\n  for (var safeName in methodMap) {\n    var name = safeName.slice(0, -2);\n    var paramMap = methodMap[safeName];\n    var paramCounts = Object.keys(paramMap);\n    var first = paramMap[paramCounts[0]];\n\n    if (paramCounts.length === 1) {\n      addMethod(first, true);\n    } else {\n      var cases = '';\n\n      for (var _i = 0; _i < paramCounts.length; _i++) {\n        var paramCount = paramCounts[_i];\n        var meth = paramMap[paramCount];\n        meth.name = \"\".concat(name).concat(SEP).concat(paramCount);\n        cases += \"case \".concat(paramCount, \":return \").concat(meth.static ? className : 'this', \".\").concat(meth.name, \"(...args$);\");\n        addMethod(meth);\n      }\n\n      if (first.static) staticVars.push(\"\".concat(className, \".\").concat(name, \"=(...args\").concat(SEP, \")=>{switch(args\").concat(SEP, \".length){\").concat(cases, \"}};\"));else classProps.push(\"\".concat(name, \"(...args\").concat(SEP, \"){switch(args\").concat(SEP, \".length){\").concat(cases, \"}}\"));\n    }\n  }\n\n  if (!addedConstructor && initVars.length) classProps.unshift(\"constructor(){\".concat(initVars.join('') + opts.separator, \"}\"));\n  return \"class \".concat(className).concat(superclass ? ' extends ' + superclass : '', \"{\").concat(classProps.join(''), \"}\").concat(staticVars.join(''));\n};\n\nvar globalsToJs = function globalsToJs(_ref4) {\n  var vars = _ref4.vars,\n      methods = _ref4.methods,\n      classes = _ref4.classes;\n  var join = [];\n  join.push(joinStatements(vars.map(varToString)));\n  join.push(methods.map(function (_ref5) {\n    var name = _ref5.name,\n        parameters = _ref5.parameters,\n        block = _ref5.block;\n    return \"\".concat(opts.globalScope && name in opts.globalVars ? \"\".concat(opts.globalScope, \".\") : 'const ').concat(name, \" = (\").concat(parameters, \") => {\").concat(block, \"};\");\n  }).join(opts.separator));\n  join.push(classes.map(classToJs).join(opts.separator));\n  return join.join(opts.separator);\n};\n\nvar convertLiteralMethodsToCasts = function convertLiteralMethodsToCasts(str) {\n  return str.replace(/(int|float|char|long|double)\\s*\\(/g, '($1)(');\n};\n/**\n * Convert Java string to JavaScript string\n * @param {string} javaString - Java file contents\n * @param {object} [options]\n * @param {object} [options.globalVars] - Object keys are added to the `globalScope` object. If the object value is a string, the variable is renamed to that string\n * @param {string} [options.globalScope] - If specified, variables in `globalVars` are appended to `globalScope` object\n * @param {boolean} [options.p5] - Sets `globalScope` to `'p5'`, adds [p5 variable mappings](./p5_globals.js) to `globalVars`, and allows for global methods and variables\n * @param {boolean} [options.ugly] - Don't beautify JavaScript code  \n * @param {function} [progress] - Callback on progress of conversion. Args are progress number (0 to 1), and a message string\n * @return {string} - Converted JavaScript\n */\n\n\nvar javaToJavascript = function javaToJavascript(javaString) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var progress = arguments.length > 2 ? arguments[2] : undefined;\n  if (typeof javaString !== 'string') throw new Error('java-to-javascript: First argument must be a string'); // Reset opts parameters\n\n  Object.assign(opts, DEFAULT_OPTIONS);\n  if (options.globalVars) opts.globalVars = options.globalVars;\n  if (options.globalScope) opts.globalScope = options.globalScope;\n  if (options.ugly) opts.separator = '';\n\n  if (options.p5) {\n    Object.assign(opts.globalVars, p5_options.globalVars, opts.globalVars);\n    if (!opts.globalScope) opts.globalScope = 'p5';\n  }\n\n  if (progress) progress(0, 'Parsing Java');\n  if (options.p5) javaString = \"class JavaJsTemp__ {\".concat(convertLiteralMethodsToCasts(javaString), \"}\");\n  var javaAST;\n\n  try {\n    javaAST = JavaAST.parse(javaString);\n  } catch (e) {\n    if (e.location) throw new Error(\"SyntaxError around line \".concat(e.location.start.line, \": \").concat(e.message));else throw e;\n  }\n\n  if (progress) progress(0.5, 'Converting to JavaScript');\n  var jsString;\n\n  if (options.p5) {\n    jsString = globalsToJs(parseClass(javaAST.types[0], true));\n  } else {\n    jsString = javaAST.types.map(function (globalClass) {\n      return classToJs(parseClass(globalClass));\n    }).join(opts.separator);\n  }\n\n  if (progress) progress(0.75, 'Beautifying');\n\n  if (!options.ugly) {\n    jsString = beautify.js_beautify(jsString, {\n      indent_size: 2\n    }) + '\\n';\n  }\n\n  if (progress) progress(1.0, 'Success');\n  return jsString;\n};\n\nmodule.exports = javaToJavascript;\n\n},{\"./p5_options\":3,\"js-beautify/js/lib/beautify\":2}],2:[function(require,module,exports){\n(function (global){\n/*jshint curly:false, eqeqeq:true, laxbreak:true, noempty:false */\n/* AUTO-GENERATED. DO NOT MODIFY. */\n/* see js/src/javascript/index.js */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n\n JS Beautifier\n---------------\n\n\n  Written by Einar Lielmanis, <einar@jsbeautifier.org>\n      http://jsbeautifier.org/\n\n  Originally converted to javascript by Vital, <vital76@gmail.com>\n  \"End braces on own line\" added by Chris J. Shull, <chrisjshull@gmail.com>\n  Parsing improvements for brace-less statements by Liam Newman <bitwiseman@gmail.com>\n\n\n  Usage:\n    js_beautify(js_source_text);\n    js_beautify(js_source_text, options);\n\n  The options are:\n    indent_size (default 4)          - indentation size,\n    indent_char (default space)      - character to indent with,\n    preserve_newlines (default true) - whether existing line breaks should be preserved,\n    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk,\n\n    jslint_happy (default false) - if true, then jslint-stricter mode is enforced.\n\n            jslint_happy        !jslint_happy\n            ---------------------------------\n            function ()         function()\n\n            switch () {         switch() {\n            case 1:               case 1:\n              break;                break;\n            }                   }\n\n    space_after_anon_function (default false) - should the space before an anonymous function's parens be added, \"function()\" vs \"function ()\",\n          NOTE: This option is overriden by jslint_happy (i.e. if jslint_happy is true, space_after_anon_function is true by design)\n\n    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\" | \"none\" | any of the former + \",preserve-inline\"\n            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n            preserve-inline will try to preserve inline blocks of curly braces\n\n    space_before_conditional (default true) - should the space before conditional statement be added, \"if(true)\" vs \"if (true)\",\n\n    unescape_strings (default false) - should printable characters in strings encoded in \\xNN notation be unescaped, \"example\" vs \"\\x65\\x78\\x61\\x6d\\x70\\x6c\\x65\"\n\n    wrap_line_length (default unlimited) - lines should wrap at next opportunity after this number of characters.\n          NOTE: This is not a hard limit. Lines will continue until a point where a newline would\n                be preserved if it were present.\n\n    end_with_newline (default false)  - end output with a newline\n\n\n    e.g\n\n    js_beautify(js_source_text, {\n      'indent_size': 1,\n      'indent_char': '\\t'\n    });\n\n*/\n\n(function() {\nvar legacy_beautify_js =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar Beautifier = __webpack_require__(1).Beautifier;\n\nfunction js_beautify(js_source_text, options) {\n  var beautifier = new Beautifier(js_source_text, options);\n  return beautifier.beautify();\n}\n\nmodule.exports = js_beautify;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar mergeOpts = __webpack_require__(2).mergeOpts;\nvar normalizeOpts = __webpack_require__(2).normalizeOpts;\nvar acorn = __webpack_require__(3);\nvar Output = __webpack_require__(4).Output;\nvar Tokenizer = __webpack_require__(5).Tokenizer;\nvar TOKEN = __webpack_require__(5).TOKEN;\n\nfunction remove_redundant_indentation(output, frame) {\n  // This implementation is effective but has some issues:\n  //     - can cause line wrap to happen too soon due to indent removal\n  //           after wrap points are calculated\n  // These issues are minor compared to ugly indentation.\n\n  if (frame.multiline_frame ||\n    frame.mode === MODE.ForInitializer ||\n    frame.mode === MODE.Conditional) {\n    return;\n  }\n\n  // remove one indent from each line inside this section\n  output.remove_indent(frame.start_line_index);\n}\n\nfunction in_array(what, arr) {\n  return arr.indexOf(what) !== -1;\n}\n\nfunction ltrim(s) {\n  return s.replace(/^\\s+/g, '');\n}\n\nfunction generateMapFromStrings(list) {\n  var result = {};\n  for (var x = 0; x < list.length; x++) {\n    // make the mapped names underscored instead of dash\n    result[list[x].replace(/-/g, '_')] = list[x];\n  }\n  return result;\n}\n\nfunction sanitizeOperatorPosition(opPosition) {\n  opPosition = opPosition || OPERATOR_POSITION.before_newline;\n\n  if (!in_array(opPosition, validPositionValues)) {\n    throw new Error(\"Invalid Option Value: The option 'operator_position' must be one of the following values\\n\" +\n      validPositionValues +\n      \"\\nYou passed in: '\" + opPosition + \"'\");\n  }\n\n  return opPosition;\n}\n\nvar validPositionValues = ['before-newline', 'after-newline', 'preserve-newline'];\n\n// Generate map from array\nvar OPERATOR_POSITION = generateMapFromStrings(validPositionValues);\n\nvar OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];\n\nvar MODE = {\n  BlockStatement: 'BlockStatement', // 'BLOCK'\n  Statement: 'Statement', // 'STATEMENT'\n  ObjectLiteral: 'ObjectLiteral', // 'OBJECT',\n  ArrayLiteral: 'ArrayLiteral', //'[EXPRESSION]',\n  ForInitializer: 'ForInitializer', //'(FOR-EXPRESSION)',\n  Conditional: 'Conditional', //'(COND-EXPRESSION)',\n  Expression: 'Expression' //'(EXPRESSION)'\n};\n\nfunction Beautifier(source_text, options) {\n  options = options || {};\n  this._source_text = source_text || '';\n\n  var output;\n  var tokens;\n  var tokenizer;\n  var current_token;\n  var last_type, last_last_text;\n  var flags, previous_flags, flag_store;\n\n  var handlers, opt;\n\n  handlers = {};\n  handlers[TOKEN.START_EXPR] = handle_start_expr;\n  handlers[TOKEN.END_EXPR] = handle_end_expr;\n  handlers[TOKEN.START_BLOCK] = handle_start_block;\n  handlers[TOKEN.END_BLOCK] = handle_end_block;\n  handlers[TOKEN.WORD] = handle_word;\n  handlers[TOKEN.RESERVED] = handle_word;\n  handlers[TOKEN.SEMICOLON] = handle_semicolon;\n  handlers[TOKEN.STRING] = handle_string;\n  handlers[TOKEN.EQUALS] = handle_equals;\n  handlers[TOKEN.OPERATOR] = handle_operator;\n  handlers[TOKEN.COMMA] = handle_comma;\n  handlers[TOKEN.BLOCK_COMMENT] = handle_block_comment;\n  handlers[TOKEN.COMMENT] = handle_comment;\n  handlers[TOKEN.DOT] = handle_dot;\n  handlers[TOKEN.UNKNOWN] = handle_unknown;\n  handlers[TOKEN.EOF] = handle_eof;\n\n  function create_flags(flags_base, mode) {\n    var next_indent_level = 0;\n    if (flags_base) {\n      next_indent_level = flags_base.indentation_level;\n      if (!output.just_added_newline() &&\n        flags_base.line_indent_level > next_indent_level) {\n        next_indent_level = flags_base.line_indent_level;\n      }\n    }\n\n    var next_flags = {\n      mode: mode,\n      parent: flags_base,\n      last_text: flags_base ? flags_base.last_text : '', // last token text\n      last_word: flags_base ? flags_base.last_word : '', // last TOKEN.WORD passed\n      declaration_statement: false,\n      declaration_assignment: false,\n      multiline_frame: false,\n      inline_frame: false,\n      if_block: false,\n      else_block: false,\n      do_block: false,\n      do_while: false,\n      import_block: false,\n      in_case_statement: false, // switch(..){ INSIDE HERE }\n      in_case: false, // we're on the exact line with \"case 0:\"\n      case_body: false, // the indented case-action block\n      indentation_level: next_indent_level,\n      line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,\n      start_line_index: output.get_line_number(),\n      ternary_depth: 0\n    };\n    return next_flags;\n  }\n\n  // Allow the setting of language/file-type specific options\n  // with inheritance of overall settings\n  options = mergeOpts(options, 'js');\n  options = normalizeOpts(options);\n\n  opt = {};\n\n  // compatibility, re\n  if (options.brace_style === \"expand-strict\") { //graceful handling of deprecated option\n    options.brace_style = \"expand\";\n  } else if (options.brace_style === \"collapse-preserve-inline\") { //graceful handling of deprecated option\n    options.brace_style = \"collapse,preserve-inline\";\n  } else if (options.braces_on_own_line !== undefined) { //graceful handling of deprecated option\n    options.brace_style = options.braces_on_own_line ? \"expand\" : \"collapse\";\n  } else if (!options.brace_style) { //Nothing exists to set it\n    options.brace_style = \"collapse\";\n  }\n\n  //preserve-inline in delimited string will trigger brace_preserve_inline, everything\n  //else is considered a brace_style and the last one only will have an effect\n  var brace_style_split = options.brace_style.split(/[^a-zA-Z0-9_\\-]+/);\n  opt.brace_preserve_inline = false; //Defaults in case one or other was not specified in meta-option\n  opt.brace_style = \"collapse\";\n  for (var bs = 0; bs < brace_style_split.length; bs++) {\n    if (brace_style_split[bs] === \"preserve-inline\") {\n      opt.brace_preserve_inline = true;\n    } else {\n      opt.brace_style = brace_style_split[bs];\n    }\n  }\n\n  opt.indent_size = options.indent_size ? parseInt(options.indent_size, 10) : 4;\n  opt.indent_char = options.indent_char ? options.indent_char : ' ';\n  opt.eol = options.eol ? options.eol : 'auto';\n  opt.preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n  opt.unindent_chained_methods = (options.unindent_chained_methods === undefined) ? false : options.unindent_chained_methods;\n  opt.break_chained_methods = (options.break_chained_methods === undefined) ? false : options.break_chained_methods;\n  opt.max_preserve_newlines = (options.max_preserve_newlines === undefined) ? 0 : parseInt(options.max_preserve_newlines, 10);\n  opt.space_in_paren = (options.space_in_paren === undefined) ? false : options.space_in_paren;\n  opt.space_in_empty_paren = (options.space_in_empty_paren === undefined) ? false : options.space_in_empty_paren;\n  opt.jslint_happy = (options.jslint_happy === undefined) ? false : options.jslint_happy;\n  opt.space_after_anon_function = (options.space_after_anon_function === undefined) ? false : options.space_after_anon_function;\n  opt.keep_array_indentation = (options.keep_array_indentation === undefined) ? false : options.keep_array_indentation;\n  opt.space_before_conditional = (options.space_before_conditional === undefined) ? true : options.space_before_conditional;\n  opt.unescape_strings = (options.unescape_strings === undefined) ? false : options.unescape_strings;\n  opt.wrap_line_length = (options.wrap_line_length === undefined) ? 0 : parseInt(options.wrap_line_length, 10);\n  opt.e4x = (options.e4x === undefined) ? false : options.e4x;\n  opt.end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n  opt.comma_first = (options.comma_first === undefined) ? false : options.comma_first;\n  opt.operator_position = sanitizeOperatorPosition(options.operator_position);\n\n  // Support passing the source text back with no change\n  opt.disabled = (options.disabled === undefined) ? false : options.disabled;\n\n  // For testing of beautify preserve:start directive\n  opt.test_output_raw = (options.test_output_raw === undefined) ? false : options.test_output_raw;\n\n  // force opt.space_after_anon_function to true if opt.jslint_happy\n  if (opt.jslint_happy) {\n    opt.space_after_anon_function = true;\n  }\n\n  if (options.indent_with_tabs) {\n    opt.indent_char = '\\t';\n    opt.indent_size = 1;\n  }\n\n  opt.eol = opt.eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\n  this._reset = function(source_text) {\n    var baseIndentString = '';\n\n    var indent_string = new Array(opt.indent_size + 1).join(opt.indent_char);\n\n    var preindent_index = 0;\n    if (source_text && source_text.length) {\n      while ((source_text.charAt(preindent_index) === ' ' ||\n          source_text.charAt(preindent_index) === '\\t')) {\n        preindent_index += 1;\n      }\n      baseIndentString = source_text.substring(0, preindent_index);\n      source_text = source_text.substring(preindent_index);\n    }\n\n    last_type = TOKEN.START_BLOCK; // last token type\n    last_last_text = ''; // pre-last token text\n    output = new Output(indent_string, baseIndentString);\n\n    // If testing the ignore directive, start with output disable set to true\n    output.raw = opt.test_output_raw;\n\n\n    // Stack of parsing/formatting states, including MODE.\n    // We tokenize, parse, and output in an almost purely a forward-only stream of token input\n    // and formatted output.  This makes the beautifier less accurate than full parsers\n    // but also far more tolerant of syntax errors.\n    //\n    // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type\n    // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later\n    // encounter a \":\", we'll switch to to MODE.ObjectLiteral.  If we then see a \";\",\n    // most full parsers would die, but the beautifier gracefully falls back to\n    // MODE.BlockStatement and continues on.\n    flag_store = [];\n    set_mode(MODE.BlockStatement);\n    tokenizer = new Tokenizer(source_text, opt, indent_string);\n    tokens = tokenizer.tokenize();\n    return source_text;\n  };\n\n  this.beautify = function() {\n\n    // if disabled, return the input unchanged.\n    if (opt.disabled) {\n      return this._source_text;\n    }\n\n    var sweet_code;\n    var source_text = this._reset(this._source_text);\n\n    var eol = opt.eol;\n    if (opt.eol === 'auto') {\n      eol = '\\n';\n      if (source_text && acorn.lineBreak.test(source_text || '')) {\n        eol = source_text.match(acorn.lineBreak)[0];\n      }\n    }\n\n    current_token = tokens.next();\n    while (current_token) {\n      handlers[current_token.type]();\n\n      last_last_text = flags.last_text;\n      last_type = current_token.type;\n      flags.last_text = current_token.text;\n\n      current_token = tokens.next();\n    }\n\n    sweet_code = output.get_code(opt.end_with_newline, eol);\n\n    return sweet_code;\n  };\n\n  function handle_whitespace_and_comments(local_token, preserve_statement_flags) {\n    var newlines = local_token.newlines;\n    var keep_whitespace = opt.keep_array_indentation && is_array(flags.mode);\n\n    if (local_token.comments_before) {\n      var temp_token = current_token;\n      current_token = local_token.comments_before.next();\n      while (current_token) {\n        // The cleanest handling of inline comments is to treat them as though they aren't there.\n        // Just continue formatting and the behavior should be logical.\n        // Also ignore unknown tokens.  Again, this should result in better behavior.\n        handle_whitespace_and_comments(current_token, preserve_statement_flags);\n        handlers[current_token.type](preserve_statement_flags);\n        current_token = local_token.comments_before.next();\n      }\n      current_token = temp_token;\n    }\n\n    if (keep_whitespace) {\n      for (var i = 0; i < newlines; i += 1) {\n        print_newline(i > 0, preserve_statement_flags);\n      }\n    } else {\n      if (opt.max_preserve_newlines && newlines > opt.max_preserve_newlines) {\n        newlines = opt.max_preserve_newlines;\n      }\n\n      if (opt.preserve_newlines) {\n        if (local_token.newlines > 1) {\n          print_newline(false, preserve_statement_flags);\n          for (var j = 1; j < newlines; j += 1) {\n            print_newline(true, preserve_statement_flags);\n          }\n        }\n      }\n    }\n\n  }\n\n  // we could use just string.split, but\n  // IE doesn't like returning empty strings\n  function split_linebreaks(s) {\n    //return s.split(/\\x0d\\x0a|\\x0a/);\n\n    s = s.replace(acorn.allLineBreaks, '\\n');\n    var out = [],\n      idx = s.indexOf(\"\\n\");\n    while (idx !== -1) {\n      out.push(s.substring(0, idx));\n      s = s.substring(idx + 1);\n      idx = s.indexOf(\"\\n\");\n    }\n    if (s.length) {\n      out.push(s);\n    }\n    return out;\n  }\n\n  var newline_restricted_tokens = ['async', 'await', 'break', 'continue', 'return', 'throw', 'yield'];\n\n  function allow_wrap_or_preserved_newline(force_linewrap) {\n    force_linewrap = (force_linewrap === undefined) ? false : force_linewrap;\n\n    // Never wrap the first token on a line\n    if (output.just_added_newline()) {\n      return;\n    }\n\n    var shouldPreserveOrForce = (opt.preserve_newlines && current_token.newlines) || force_linewrap;\n    var operatorLogicApplies = in_array(flags.last_text, tokenizer.positionable_operators) || in_array(current_token.text, tokenizer.positionable_operators);\n\n    if (operatorLogicApplies) {\n      var shouldPrintOperatorNewline = (\n          in_array(flags.last_text, tokenizer.positionable_operators) &&\n          in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)\n        ) ||\n        in_array(current_token.text, tokenizer.positionable_operators);\n      shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;\n    }\n\n    if (shouldPreserveOrForce) {\n      print_newline(false, true);\n    } else if (opt.wrap_line_length) {\n      if (last_type === TOKEN.RESERVED && in_array(flags.last_text, newline_restricted_tokens)) {\n        // These tokens should never have a newline inserted\n        // between them and the following expression.\n        return;\n      }\n      var proposed_line_length = output.current_line.get_character_count() + current_token.text.length +\n        (output.space_before_token ? 1 : 0);\n      if (proposed_line_length >= opt.wrap_line_length) {\n        print_newline(false, true);\n      }\n    }\n  }\n\n  function print_newline(force_newline, preserve_statement_flags) {\n    if (!preserve_statement_flags) {\n      if (flags.last_text !== ';' && flags.last_text !== ',' && flags.last_text !== '=' && (last_type !== TOKEN.OPERATOR || flags.last_text === '--' || flags.last_text === '++')) {\n        var next_token = tokens.peek();\n        while (flags.mode === MODE.Statement &&\n          !(flags.if_block && next_token && next_token.type === TOKEN.RESERVED && next_token.text === 'else') &&\n          !flags.do_block) {\n          restore_mode();\n        }\n      }\n    }\n\n    if (output.add_new_line(force_newline)) {\n      flags.multiline_frame = true;\n    }\n  }\n\n  function print_token_line_indentation() {\n    if (output.just_added_newline()) {\n      if (opt.keep_array_indentation && is_array(flags.mode) && current_token.newlines) {\n        output.current_line.push(current_token.whitespace_before);\n        output.space_before_token = false;\n      } else if (output.set_indent(flags.indentation_level)) {\n        flags.line_indent_level = flags.indentation_level;\n      }\n    }\n  }\n\n  function print_token(printable_token) {\n    if (output.raw) {\n      output.add_raw_token(current_token);\n      return;\n    }\n\n    if (opt.comma_first && last_type === TOKEN.COMMA &&\n      output.just_added_newline()) {\n      if (output.previous_line.last() === ',') {\n        var popped = output.previous_line.pop();\n        // if the comma was already at the start of the line,\n        // pull back onto that line and reprint the indentation\n        if (output.previous_line.is_empty()) {\n          output.previous_line.push(popped);\n          output.trim(true);\n          output.current_line.pop();\n          output.trim();\n        }\n\n        // add the comma in front of the next token\n        print_token_line_indentation();\n        output.add_token(',');\n        output.space_before_token = true;\n      }\n    }\n\n    printable_token = printable_token || current_token.text;\n    print_token_line_indentation();\n    output.add_token(printable_token);\n  }\n\n  function indent() {\n    flags.indentation_level += 1;\n  }\n\n  function deindent() {\n    if (flags.indentation_level > 0 &&\n      ((!flags.parent) || flags.indentation_level > flags.parent.indentation_level)) {\n      flags.indentation_level -= 1;\n\n    }\n  }\n\n  function set_mode(mode) {\n    if (flags) {\n      flag_store.push(flags);\n      previous_flags = flags;\n    } else {\n      previous_flags = create_flags(null, mode);\n    }\n\n    flags = create_flags(previous_flags, mode);\n  }\n\n  function is_array(mode) {\n    return mode === MODE.ArrayLiteral;\n  }\n\n  function is_expression(mode) {\n    return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);\n  }\n\n  function restore_mode() {\n    if (flag_store.length > 0) {\n      previous_flags = flags;\n      flags = flag_store.pop();\n      if (previous_flags.mode === MODE.Statement) {\n        remove_redundant_indentation(output, previous_flags);\n      }\n    }\n  }\n\n  function start_of_object_property() {\n    return flags.parent.mode === MODE.ObjectLiteral && flags.mode === MODE.Statement && (\n      (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === TOKEN.RESERVED && in_array(flags.last_text, ['get', 'set'])));\n  }\n\n  function start_of_statement() {\n    var start = false;\n    start = start || (last_type === TOKEN.RESERVED && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === TOKEN.WORD);\n    start = start || (last_type === TOKEN.RESERVED && flags.last_text === 'do');\n    start = start || (last_type === TOKEN.RESERVED && in_array(flags.last_text, newline_restricted_tokens) && !current_token.newlines);\n    start = start || (last_type === TOKEN.RESERVED && flags.last_text === 'else' &&\n      !(current_token.type === TOKEN.RESERVED && current_token.text === 'if' && !current_token.comments_before));\n    start = start || (last_type === TOKEN.END_EXPR && (previous_flags.mode === MODE.ForInitializer || previous_flags.mode === MODE.Conditional));\n    start = start || (last_type === TOKEN.WORD && flags.mode === MODE.BlockStatement &&\n      !flags.in_case &&\n      !(current_token.text === '--' || current_token.text === '++') &&\n      last_last_text !== 'function' &&\n      current_token.type !== TOKEN.WORD && current_token.type !== TOKEN.RESERVED);\n    start = start || (flags.mode === MODE.ObjectLiteral && (\n      (flags.last_text === ':' && flags.ternary_depth === 0) || (last_type === TOKEN.RESERVED && in_array(flags.last_text, ['get', 'set']))));\n\n    if (start) {\n      set_mode(MODE.Statement);\n      indent();\n\n      handle_whitespace_and_comments(current_token, true);\n\n      // Issue #276:\n      // If starting a new statement with [if, for, while, do], push to a new line.\n      // if (a) if (b) if(c) d(); else e(); else f();\n      if (!start_of_object_property()) {\n        allow_wrap_or_preserved_newline(\n          current_token.type === TOKEN.RESERVED && in_array(current_token.text, ['do', 'for', 'if', 'while']));\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  function all_lines_start_with(lines, c) {\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i].trim();\n      if (line.charAt(0) !== c) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function each_line_matches_indent(lines, indent) {\n    var i = 0,\n      len = lines.length,\n      line;\n    for (; i < len; i++) {\n      line = lines[i];\n      // allow empty lines to pass through\n      if (line && line.indexOf(indent) !== 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function is_special_word(word) {\n    return in_array(word, ['case', 'return', 'do', 'if', 'throw', 'else', 'await', 'break', 'continue', 'async']);\n  }\n\n  function handle_start_expr() {\n    // The conditional starts the statement if appropriate.\n    if (!start_of_statement()) {\n      handle_whitespace_and_comments(current_token);\n    }\n\n    var next_mode = MODE.Expression;\n    if (current_token.text === '[') {\n\n      if (last_type === TOKEN.WORD || flags.last_text === ')') {\n        // this is array index specifier, break immediately\n        // a[x], fn()[x]\n        if (last_type === TOKEN.RESERVED && in_array(flags.last_text, tokenizer.line_starters)) {\n          output.space_before_token = true;\n        }\n        set_mode(next_mode);\n        print_token();\n        indent();\n        if (opt.space_in_paren) {\n          output.space_before_token = true;\n        }\n        return;\n      }\n\n      next_mode = MODE.ArrayLiteral;\n      if (is_array(flags.mode)) {\n        if (flags.last_text === '[' ||\n          (flags.last_text === ',' && (last_last_text === ']' || last_last_text === '}'))) {\n          // ], [ goes to new line\n          // }, [ goes to new line\n          if (!opt.keep_array_indentation) {\n            print_newline();\n          }\n        }\n      }\n\n      if (!in_array(last_type, [TOKEN.START_EXPR, TOKEN.END_EXPR, TOKEN.WORD, TOKEN.OPERATOR])) {\n        output.space_before_token = true;\n      }\n    } else {\n      if (last_type === TOKEN.RESERVED) {\n        if (flags.last_text === 'for') {\n          output.space_before_token = opt.space_before_conditional;\n          next_mode = MODE.ForInitializer;\n        } else if (in_array(flags.last_text, ['if', 'while'])) {\n          output.space_before_token = opt.space_before_conditional;\n          next_mode = MODE.Conditional;\n        } else if (in_array(flags.last_word, ['await', 'async'])) {\n          // Should be a space between await and an IIFE, or async and an arrow function\n          output.space_before_token = true;\n        } else if (flags.last_text === 'import' && current_token.whitespace_before === '') {\n          output.space_before_token = false;\n        } else if (in_array(flags.last_text, tokenizer.line_starters) || flags.last_text === 'catch') {\n          output.space_before_token = true;\n        }\n      } else if (last_type === TOKEN.EQUALS || last_type === TOKEN.OPERATOR) {\n        // Support of this kind of newline preservation.\n        // a = (b &&\n        //     (c || d));\n        if (!start_of_object_property()) {\n          allow_wrap_or_preserved_newline();\n        }\n      } else if (last_type === TOKEN.WORD) {\n        output.space_before_token = false;\n      } else {\n        // Support preserving wrapped arrow function expressions\n        // a.b('c',\n        //     () => d.e\n        // )\n        allow_wrap_or_preserved_newline();\n      }\n\n      // function() vs function ()\n      // yield*() vs yield* ()\n      // function*() vs function* ()\n      if ((last_type === TOKEN.RESERVED && (flags.last_word === 'function' || flags.last_word === 'typeof')) ||\n        (flags.last_text === '*' &&\n          (in_array(last_last_text, ['function', 'yield']) ||\n            (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n\n        output.space_before_token = opt.space_after_anon_function;\n      }\n\n    }\n\n    if (flags.last_text === ';' || last_type === TOKEN.START_BLOCK) {\n      print_newline();\n    } else if (last_type === TOKEN.END_EXPR || last_type === TOKEN.START_EXPR || last_type === TOKEN.END_BLOCK || flags.last_text === '.' || last_type === TOKEN.COMMA) {\n      // do nothing on (( and )( and ][ and ]( and .(\n      // TODO: Consider whether forcing this is required.  Review failing tests when removed.\n      allow_wrap_or_preserved_newline(current_token.newlines);\n    }\n\n    set_mode(next_mode);\n    print_token();\n    if (opt.space_in_paren) {\n      output.space_before_token = true;\n    }\n\n    // In all cases, if we newline while inside an expression it should be indented.\n    indent();\n  }\n\n  function handle_end_expr() {\n    // statements inside expressions are not valid syntax, but...\n    // statements must all be closed when their container closes\n    while (flags.mode === MODE.Statement) {\n      restore_mode();\n    }\n\n    handle_whitespace_and_comments(current_token);\n\n    if (flags.multiline_frame) {\n      allow_wrap_or_preserved_newline(current_token.text === ']' && is_array(flags.mode) && !opt.keep_array_indentation);\n    }\n\n    if (opt.space_in_paren) {\n      if (last_type === TOKEN.START_EXPR && !opt.space_in_empty_paren) {\n        // () [] no inner space in empty parens like these, ever, ref #320\n        output.trim();\n        output.space_before_token = false;\n      } else {\n        output.space_before_token = true;\n      }\n    }\n    if (current_token.text === ']' && opt.keep_array_indentation) {\n      print_token();\n      restore_mode();\n    } else {\n      restore_mode();\n      print_token();\n    }\n    remove_redundant_indentation(output, previous_flags);\n\n    // do {} while () // no statement required after\n    if (flags.do_while && previous_flags.mode === MODE.Conditional) {\n      previous_flags.mode = MODE.Expression;\n      flags.do_block = false;\n      flags.do_while = false;\n\n    }\n  }\n\n  function handle_start_block() {\n    handle_whitespace_and_comments(current_token);\n\n    // Check if this is should be treated as a ObjectLiteral\n    var next_token = tokens.peek();\n    var second_token = tokens.peek(1);\n    if (second_token && (\n        (in_array(second_token.text, [':', ',']) && in_array(next_token.type, [TOKEN.STRING, TOKEN.WORD, TOKEN.RESERVED])) ||\n        (in_array(next_token.text, ['get', 'set', '...']) && in_array(second_token.type, [TOKEN.WORD, TOKEN.RESERVED]))\n      )) {\n      // We don't support TypeScript,but we didn't break it for a very long time.\n      // We'll try to keep not breaking it.\n      if (!in_array(last_last_text, ['class', 'interface'])) {\n        set_mode(MODE.ObjectLiteral);\n      } else {\n        set_mode(MODE.BlockStatement);\n      }\n    } else if (last_type === TOKEN.OPERATOR && flags.last_text === '=>') {\n      // arrow function: (param1, paramN) => { statements }\n      set_mode(MODE.BlockStatement);\n    } else if (in_array(last_type, [TOKEN.EQUALS, TOKEN.START_EXPR, TOKEN.COMMA, TOKEN.OPERATOR]) ||\n      (last_type === TOKEN.RESERVED && in_array(flags.last_text, ['return', 'throw', 'import', 'default']))\n    ) {\n      // Detecting shorthand function syntax is difficult by scanning forward,\n      //     so check the surrounding context.\n      // If the block is being returned, imported, export default, passed as arg,\n      //     assigned with = or assigned in a nested object, treat as an ObjectLiteral.\n      set_mode(MODE.ObjectLiteral);\n    } else {\n      set_mode(MODE.BlockStatement);\n    }\n\n    var empty_braces = !next_token.comments_before && next_token.text === '}';\n    var empty_anonymous_function = empty_braces && flags.last_word === 'function' &&\n      last_type === TOKEN.END_EXPR;\n\n    if (opt.brace_preserve_inline) // check for inline, set inline_frame if so\n    {\n      // search forward for a newline wanted inside this block\n      var index = 0;\n      var check_token = null;\n      flags.inline_frame = true;\n      do {\n        index += 1;\n        check_token = tokens.peek(index - 1);\n        if (check_token.newlines) {\n          flags.inline_frame = false;\n          break;\n        }\n      } while (check_token.type !== TOKEN.EOF &&\n        !(check_token.type === TOKEN.END_BLOCK && check_token.opened === current_token));\n    }\n\n    if ((opt.brace_style === \"expand\" ||\n        (opt.brace_style === \"none\" && current_token.newlines)) &&\n      !flags.inline_frame) {\n      if (last_type !== TOKEN.OPERATOR &&\n        (empty_anonymous_function ||\n          last_type === TOKEN.EQUALS ||\n          (last_type === TOKEN.RESERVED && is_special_word(flags.last_text) && flags.last_text !== 'else'))) {\n        output.space_before_token = true;\n      } else {\n        print_newline(false, true);\n      }\n    } else { // collapse || inline_frame\n      if (is_array(previous_flags.mode) && (last_type === TOKEN.START_EXPR || last_type === TOKEN.COMMA)) {\n        if (last_type === TOKEN.COMMA || opt.space_in_paren) {\n          output.space_before_token = true;\n        }\n\n        if (last_type === TOKEN.COMMA || (last_type === TOKEN.START_EXPR && flags.inline_frame)) {\n          allow_wrap_or_preserved_newline();\n          previous_flags.multiline_frame = previous_flags.multiline_frame || flags.multiline_frame;\n          flags.multiline_frame = false;\n        }\n      }\n      if (last_type !== TOKEN.OPERATOR && last_type !== TOKEN.START_EXPR) {\n        if (last_type === TOKEN.START_BLOCK && !flags.inline_frame) {\n          print_newline();\n        } else {\n          output.space_before_token = true;\n        }\n      }\n    }\n    print_token();\n    indent();\n  }\n\n  function handle_end_block() {\n    // statements must all be closed when their container closes\n    handle_whitespace_and_comments(current_token);\n\n    while (flags.mode === MODE.Statement) {\n      restore_mode();\n    }\n\n    var empty_braces = last_type === TOKEN.START_BLOCK;\n\n    if (flags.inline_frame && !empty_braces) { // try inline_frame (only set if opt.braces-preserve-inline) first\n      output.space_before_token = true;\n    } else if (opt.brace_style === \"expand\") {\n      if (!empty_braces) {\n        print_newline();\n      }\n    } else {\n      // skip {}\n      if (!empty_braces) {\n        if (is_array(flags.mode) && opt.keep_array_indentation) {\n          // we REALLY need a newline here, but newliner would skip that\n          opt.keep_array_indentation = false;\n          print_newline();\n          opt.keep_array_indentation = true;\n\n        } else {\n          print_newline();\n        }\n      }\n    }\n    restore_mode();\n    print_token();\n  }\n\n  function handle_word() {\n    if (current_token.type === TOKEN.RESERVED) {\n      if (in_array(current_token.text, ['set', 'get']) && flags.mode !== MODE.ObjectLiteral) {\n        current_token.type = TOKEN.WORD;\n      } else if (in_array(current_token.text, ['as', 'from']) && !flags.import_block) {\n        current_token.type = TOKEN.WORD;\n      } else if (flags.mode === MODE.ObjectLiteral) {\n        var next_token = tokens.peek();\n        if (next_token.text === ':') {\n          current_token.type = TOKEN.WORD;\n        }\n      }\n    }\n\n    if (start_of_statement()) {\n      // The conditional starts the statement if appropriate.\n      if (last_type === TOKEN.RESERVED && in_array(flags.last_text, ['var', 'let', 'const']) && current_token.type === TOKEN.WORD) {\n        flags.declaration_statement = true;\n      }\n    } else if (current_token.newlines && !is_expression(flags.mode) &&\n      (last_type !== TOKEN.OPERATOR || (flags.last_text === '--' || flags.last_text === '++')) &&\n      last_type !== TOKEN.EQUALS &&\n      (opt.preserve_newlines || !(last_type === TOKEN.RESERVED && in_array(flags.last_text, ['var', 'let', 'const', 'set', 'get'])))) {\n      handle_whitespace_and_comments(current_token);\n      print_newline();\n    } else {\n      handle_whitespace_and_comments(current_token);\n    }\n\n    if (flags.do_block && !flags.do_while) {\n      if (current_token.type === TOKEN.RESERVED && current_token.text === 'while') {\n        // do {} ## while ()\n        output.space_before_token = true;\n        print_token();\n        output.space_before_token = true;\n        flags.do_while = true;\n        return;\n      } else {\n        // do {} should always have while as the next word.\n        // if we don't see the expected while, recover\n        print_newline();\n        flags.do_block = false;\n      }\n    }\n\n    // if may be followed by else, or not\n    // Bare/inline ifs are tricky\n    // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();\n    if (flags.if_block) {\n      if (!flags.else_block && (current_token.type === TOKEN.RESERVED && current_token.text === 'else')) {\n        flags.else_block = true;\n      } else {\n        while (flags.mode === MODE.Statement) {\n          restore_mode();\n        }\n        flags.if_block = false;\n        flags.else_block = false;\n      }\n    }\n\n    if (current_token.type === TOKEN.RESERVED && (current_token.text === 'case' || (current_token.text === 'default' && flags.in_case_statement))) {\n      print_newline();\n      if (flags.case_body || opt.jslint_happy) {\n        // switch cases following one another\n        deindent();\n        flags.case_body = false;\n      }\n      print_token();\n      flags.in_case = true;\n      flags.in_case_statement = true;\n      return;\n    }\n\n    if (last_type === TOKEN.COMMA || last_type === TOKEN.START_EXPR || last_type === TOKEN.EQUALS || last_type === TOKEN.OPERATOR) {\n      if (!start_of_object_property()) {\n        allow_wrap_or_preserved_newline();\n      }\n    }\n\n    if (current_token.type === TOKEN.RESERVED && current_token.text === 'function') {\n      if (in_array(flags.last_text, ['}', ';']) ||\n        (output.just_added_newline() && !(in_array(flags.last_text, ['(', '[', '{', ':', '=', ',']) || last_type === TOKEN.OPERATOR))) {\n        // make sure there is a nice clean space of at least one blank line\n        // before a new function definition\n        if (!output.just_added_blankline() && !current_token.comments_before) {\n          print_newline();\n          print_newline(true);\n        }\n      }\n      if (last_type === TOKEN.RESERVED || last_type === TOKEN.WORD) {\n        if (last_type === TOKEN.RESERVED && (\n            in_array(flags.last_text, ['get', 'set', 'new', 'export']) ||\n            in_array(flags.last_text, newline_restricted_tokens))) {\n          output.space_before_token = true;\n        } else if (last_type === TOKEN.RESERVED && flags.last_text === 'default' && last_last_text === 'export') {\n          output.space_before_token = true;\n        } else {\n          print_newline();\n        }\n      } else if (last_type === TOKEN.OPERATOR || flags.last_text === '=') {\n        // foo = function\n        output.space_before_token = true;\n      } else if (!flags.multiline_frame && (is_expression(flags.mode) || is_array(flags.mode))) {\n        // (function\n      } else {\n        print_newline();\n      }\n\n      print_token();\n      flags.last_word = current_token.text;\n      return;\n    }\n\n    var prefix = 'NONE';\n\n    if (last_type === TOKEN.END_BLOCK) {\n\n      if (previous_flags.inline_frame) {\n        prefix = 'SPACE';\n      } else if (!(current_token.type === TOKEN.RESERVED && in_array(current_token.text, ['else', 'catch', 'finally', 'from']))) {\n        prefix = 'NEWLINE';\n      } else {\n        if (opt.brace_style === \"expand\" ||\n          opt.brace_style === \"end-expand\" ||\n          (opt.brace_style === \"none\" && current_token.newlines)) {\n          prefix = 'NEWLINE';\n        } else {\n          prefix = 'SPACE';\n          output.space_before_token = true;\n        }\n      }\n    } else if (last_type === TOKEN.SEMICOLON && flags.mode === MODE.BlockStatement) {\n      // TODO: Should this be for STATEMENT as well?\n      prefix = 'NEWLINE';\n    } else if (last_type === TOKEN.SEMICOLON && is_expression(flags.mode)) {\n      prefix = 'SPACE';\n    } else if (last_type === TOKEN.STRING) {\n      prefix = 'NEWLINE';\n    } else if (last_type === TOKEN.RESERVED || last_type === TOKEN.WORD ||\n      (flags.last_text === '*' &&\n        (in_array(last_last_text, ['function', 'yield']) ||\n          (flags.mode === MODE.ObjectLiteral && in_array(last_last_text, ['{', ',']))))) {\n      prefix = 'SPACE';\n    } else if (last_type === TOKEN.START_BLOCK) {\n      if (flags.inline_frame) {\n        prefix = 'SPACE';\n      } else {\n        prefix = 'NEWLINE';\n      }\n    } else if (last_type === TOKEN.END_EXPR) {\n      output.space_before_token = true;\n      prefix = 'NEWLINE';\n    }\n\n    if (current_token.type === TOKEN.RESERVED && in_array(current_token.text, tokenizer.line_starters) && flags.last_text !== ')') {\n      if (flags.inline_frame || flags.last_text === 'else' || flags.last_text === 'export') {\n        prefix = 'SPACE';\n      } else {\n        prefix = 'NEWLINE';\n      }\n\n    }\n\n    if (current_token.type === TOKEN.RESERVED && in_array(current_token.text, ['else', 'catch', 'finally'])) {\n      if ((!(last_type === TOKEN.END_BLOCK && previous_flags.mode === MODE.BlockStatement) ||\n          opt.brace_style === \"expand\" ||\n          opt.brace_style === \"end-expand\" ||\n          (opt.brace_style === \"none\" && current_token.newlines)) &&\n        !flags.inline_frame) {\n        print_newline();\n      } else {\n        output.trim(true);\n        var line = output.current_line;\n        // If we trimmed and there's something other than a close block before us\n        // put a newline back in.  Handles '} // comment' scenario.\n        if (line.last() !== '}') {\n          print_newline();\n        }\n        output.space_before_token = true;\n      }\n    } else if (prefix === 'NEWLINE') {\n      if (last_type === TOKEN.RESERVED && is_special_word(flags.last_text)) {\n        // no newline between 'return nnn'\n        output.space_before_token = true;\n      } else if (last_type !== TOKEN.END_EXPR) {\n        if ((last_type !== TOKEN.START_EXPR || !(current_token.type === TOKEN.RESERVED && in_array(current_token.text, ['var', 'let', 'const']))) && flags.last_text !== ':') {\n          // no need to force newline on 'var': for (var x = 0...)\n          if (current_token.type === TOKEN.RESERVED && current_token.text === 'if' && flags.last_text === 'else') {\n            // no newline for } else if {\n            output.space_before_token = true;\n          } else {\n            print_newline();\n          }\n        }\n      } else if (current_token.type === TOKEN.RESERVED && in_array(current_token.text, tokenizer.line_starters) && flags.last_text !== ')') {\n        print_newline();\n      }\n    } else if (flags.multiline_frame && is_array(flags.mode) && flags.last_text === ',' && last_last_text === '}') {\n      print_newline(); // }, in lists get a newline treatment\n    } else if (prefix === 'SPACE') {\n      output.space_before_token = true;\n    }\n    if (last_type === TOKEN.WORD || last_type === TOKEN.RESERVED) {\n      output.space_before_token = true;\n    }\n    print_token();\n    flags.last_word = current_token.text;\n\n    if (current_token.type === TOKEN.RESERVED) {\n      if (current_token.text === 'do') {\n        flags.do_block = true;\n      } else if (current_token.text === 'if') {\n        flags.if_block = true;\n      } else if (current_token.text === 'import') {\n        flags.import_block = true;\n      } else if (flags.import_block && current_token.type === TOKEN.RESERVED && current_token.text === 'from') {\n        flags.import_block = false;\n      }\n    }\n  }\n\n  function handle_semicolon() {\n    if (start_of_statement()) {\n      // The conditional starts the statement if appropriate.\n      // Semicolon can be the start (and end) of a statement\n      output.space_before_token = false;\n    } else {\n      handle_whitespace_and_comments(current_token);\n    }\n\n    var next_token = tokens.peek();\n    while (flags.mode === MODE.Statement &&\n      !(flags.if_block && next_token && next_token.type === TOKEN.RESERVED && next_token.text === 'else') &&\n      !flags.do_block) {\n      restore_mode();\n    }\n\n    // hacky but effective for the moment\n    if (flags.import_block) {\n      flags.import_block = false;\n    }\n    print_token();\n  }\n\n  function handle_string() {\n    if (start_of_statement()) {\n      // The conditional starts the statement if appropriate.\n      // One difference - strings want at least a space before\n      output.space_before_token = true;\n    } else {\n      handle_whitespace_and_comments(current_token);\n      if (last_type === TOKEN.RESERVED || last_type === TOKEN.WORD || flags.inline_frame) {\n        output.space_before_token = true;\n      } else if (last_type === TOKEN.COMMA || last_type === TOKEN.START_EXPR || last_type === TOKEN.EQUALS || last_type === TOKEN.OPERATOR) {\n        if (!start_of_object_property()) {\n          allow_wrap_or_preserved_newline();\n        }\n      } else {\n        print_newline();\n      }\n    }\n    print_token();\n  }\n\n  function handle_equals() {\n    if (start_of_statement()) {\n      // The conditional starts the statement if appropriate.\n    } else {\n      handle_whitespace_and_comments(current_token);\n    }\n\n    if (flags.declaration_statement) {\n      // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done\n      flags.declaration_assignment = true;\n    }\n    output.space_before_token = true;\n    print_token();\n    output.space_before_token = true;\n  }\n\n  function handle_comma() {\n    handle_whitespace_and_comments(current_token, true);\n\n    print_token();\n    output.space_before_token = true;\n    if (flags.declaration_statement) {\n      if (is_expression(flags.parent.mode)) {\n        // do not break on comma, for(var a = 1, b = 2)\n        flags.declaration_assignment = false;\n      }\n\n      if (flags.declaration_assignment) {\n        flags.declaration_assignment = false;\n        print_newline(false, true);\n      } else if (opt.comma_first) {\n        // for comma-first, we want to allow a newline before the comma\n        // to turn into a newline after the comma, which we will fixup later\n        allow_wrap_or_preserved_newline();\n      }\n    } else if (flags.mode === MODE.ObjectLiteral ||\n      (flags.mode === MODE.Statement && flags.parent.mode === MODE.ObjectLiteral)) {\n      if (flags.mode === MODE.Statement) {\n        restore_mode();\n      }\n\n      if (!flags.inline_frame) {\n        print_newline();\n      }\n    } else if (opt.comma_first) {\n      // EXPR or DO_BLOCK\n      // for comma-first, we want to allow a newline before the comma\n      // to turn into a newline after the comma, which we will fixup later\n      allow_wrap_or_preserved_newline();\n    }\n  }\n\n  function handle_operator() {\n    var isGeneratorAsterisk = current_token.text === '*' &&\n      ((last_type === TOKEN.RESERVED && in_array(flags.last_text, ['function', 'yield'])) ||\n        (in_array(last_type, [TOKEN.START_BLOCK, TOKEN.COMMA, TOKEN.END_BLOCK, TOKEN.SEMICOLON]))\n      );\n    var isUnary = in_array(current_token.text, ['-', '+']) && (\n      in_array(last_type, [TOKEN.START_BLOCK, TOKEN.START_EXPR, TOKEN.EQUALS, TOKEN.OPERATOR]) ||\n      in_array(flags.last_text, tokenizer.line_starters) ||\n      flags.last_text === ','\n    );\n\n    if (start_of_statement()) {\n      // The conditional starts the statement if appropriate.\n    } else {\n      var preserve_statement_flags = !isGeneratorAsterisk;\n      handle_whitespace_and_comments(current_token, preserve_statement_flags);\n    }\n\n    if (last_type === TOKEN.RESERVED && is_special_word(flags.last_text)) {\n      // \"return\" had a special handling in TK_WORD. Now we need to return the favor\n      output.space_before_token = true;\n      print_token();\n      return;\n    }\n\n    // hack for actionscript's import .*;\n    if (current_token.text === '*' && last_type === TOKEN.DOT) {\n      print_token();\n      return;\n    }\n\n    if (current_token.text === '::') {\n      // no spaces around exotic namespacing syntax operator\n      print_token();\n      return;\n    }\n\n    // Allow line wrapping between operators when operator_position is\n    //   set to before or preserve\n    if (last_type === TOKEN.OPERATOR && in_array(opt.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {\n      allow_wrap_or_preserved_newline();\n    }\n\n    if (current_token.text === ':' && flags.in_case) {\n      flags.case_body = true;\n      indent();\n      print_token();\n      print_newline();\n      flags.in_case = false;\n      return;\n    }\n\n    var space_before = true;\n    var space_after = true;\n    var in_ternary = false;\n    if (current_token.text === ':') {\n      if (flags.ternary_depth === 0) {\n        // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.\n        space_before = false;\n      } else {\n        flags.ternary_depth -= 1;\n        in_ternary = true;\n      }\n    } else if (current_token.text === '?') {\n      flags.ternary_depth += 1;\n    }\n\n    // let's handle the operator_position option prior to any conflicting logic\n    if (!isUnary && !isGeneratorAsterisk && opt.preserve_newlines && in_array(current_token.text, tokenizer.positionable_operators)) {\n      var isColon = current_token.text === ':';\n      var isTernaryColon = (isColon && in_ternary);\n      var isOtherColon = (isColon && !in_ternary);\n\n      switch (opt.operator_position) {\n        case OPERATOR_POSITION.before_newline:\n          // if the current token is : and it's not a ternary statement then we set space_before to false\n          output.space_before_token = !isOtherColon;\n\n          print_token();\n\n          if (!isColon || isTernaryColon) {\n            allow_wrap_or_preserved_newline();\n          }\n\n          output.space_before_token = true;\n          return;\n\n        case OPERATOR_POSITION.after_newline:\n          // if the current token is anything but colon, or (via deduction) it's a colon and in a ternary statement,\n          //   then print a newline.\n\n          output.space_before_token = true;\n\n          if (!isColon || isTernaryColon) {\n            if (tokens.peek().newlines) {\n              print_newline(false, true);\n            } else {\n              allow_wrap_or_preserved_newline();\n            }\n          } else {\n            output.space_before_token = false;\n          }\n\n          print_token();\n\n          output.space_before_token = true;\n          return;\n\n        case OPERATOR_POSITION.preserve_newline:\n          if (!isOtherColon) {\n            allow_wrap_or_preserved_newline();\n          }\n\n          // if we just added a newline, or the current token is : and it's not a ternary statement,\n          //   then we set space_before to false\n          space_before = !(output.just_added_newline() || isOtherColon);\n\n          output.space_before_token = space_before;\n          print_token();\n          output.space_before_token = true;\n          return;\n      }\n    }\n\n    if (isGeneratorAsterisk) {\n      allow_wrap_or_preserved_newline();\n      space_before = false;\n      var next_token = tokens.peek();\n      space_after = next_token && in_array(next_token.type, [TOKEN.WORD, TOKEN.RESERVED]);\n    } else if (current_token.text === '...') {\n      allow_wrap_or_preserved_newline();\n      space_before = last_type === TOKEN.START_BLOCK;\n      space_after = false;\n    } else if (in_array(current_token.text, ['--', '++', '!', '~']) || isUnary) {\n      // unary operators (and binary +/- pretending to be unary) special cases\n      if (last_type === TOKEN.COMMA || last_type === TOKEN.START_EXPR) {\n        allow_wrap_or_preserved_newline();\n      }\n\n      space_before = false;\n      space_after = false;\n\n      // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1\n      // if there is a newline between -- or ++ and anything else we should preserve it.\n      if (current_token.newlines && (current_token.text === '--' || current_token.text === '++')) {\n        print_newline(false, true);\n      }\n\n      if (flags.last_text === ';' && is_expression(flags.mode)) {\n        // for (;; ++i)\n        //        ^^^\n        space_before = true;\n      }\n\n      if (last_type === TOKEN.RESERVED) {\n        space_before = true;\n      } else if (last_type === TOKEN.END_EXPR) {\n        space_before = !(flags.last_text === ']' && (current_token.text === '--' || current_token.text === '++'));\n      } else if (last_type === TOKEN.OPERATOR) {\n        // a++ + ++b;\n        // a - -b\n        space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(flags.last_text, ['--', '-', '++', '+']);\n        // + and - are not unary when preceeded by -- or ++ operator\n        // a-- + b\n        // a * +b\n        // a - -b\n        if (in_array(current_token.text, ['+', '-']) && in_array(flags.last_text, ['--', '++'])) {\n          space_after = true;\n        }\n      }\n\n\n      if (((flags.mode === MODE.BlockStatement && !flags.inline_frame) || flags.mode === MODE.Statement) &&\n        (flags.last_text === '{' || flags.last_text === ';')) {\n        // { foo; --i }\n        // foo(); --bar;\n        print_newline();\n      }\n    }\n\n    output.space_before_token = output.space_before_token || space_before;\n    print_token();\n    output.space_before_token = space_after;\n  }\n\n  function handle_block_comment(preserve_statement_flags) {\n    if (output.raw) {\n      output.add_raw_token(current_token);\n      if (current_token.directives && current_token.directives.preserve === 'end') {\n        // If we're testing the raw output behavior, do not allow a directive to turn it off.\n        output.raw = opt.test_output_raw;\n      }\n      return;\n    }\n\n    if (current_token.directives) {\n      print_newline(false, preserve_statement_flags);\n      print_token();\n      if (current_token.directives.preserve === 'start') {\n        output.raw = true;\n      }\n      print_newline(false, true);\n      return;\n    }\n\n    // inline block\n    if (!acorn.newline.test(current_token.text) && !current_token.newlines) {\n      output.space_before_token = true;\n      print_token();\n      output.space_before_token = true;\n      return;\n    }\n\n    var lines = split_linebreaks(current_token.text);\n    var j; // iterator for this case\n    var javadoc = false;\n    var starless = false;\n    var lastIndent = current_token.whitespace_before;\n    var lastIndentLength = lastIndent.length;\n\n    // block comment starts with a new line\n    print_newline(false, preserve_statement_flags);\n    if (lines.length > 1) {\n      javadoc = all_lines_start_with(lines.slice(1), '*');\n      starless = each_line_matches_indent(lines.slice(1), lastIndent);\n    }\n\n    // first line always indented\n    print_token(lines[0]);\n    for (j = 1; j < lines.length; j++) {\n      print_newline(false, true);\n      if (javadoc) {\n        // javadoc: reformat and re-indent\n        print_token(' ' + ltrim(lines[j]));\n      } else if (starless && lines[j].length > lastIndentLength) {\n        // starless: re-indent non-empty content, avoiding trim\n        print_token(lines[j].substring(lastIndentLength));\n      } else {\n        // normal comments output raw\n        output.add_token(lines[j]);\n      }\n    }\n\n    // for comments of more than one line, make sure there's a new line after\n    print_newline(false, preserve_statement_flags);\n  }\n\n  function handle_comment(preserve_statement_flags) {\n    if (current_token.newlines) {\n      print_newline(false, preserve_statement_flags);\n    } else {\n      output.trim(true);\n    }\n\n    output.space_before_token = true;\n    print_token();\n    print_newline(false, preserve_statement_flags);\n  }\n\n  function handle_dot() {\n    if (start_of_statement()) {\n      // The conditional starts the statement if appropriate.\n    } else {\n      handle_whitespace_and_comments(current_token, true);\n    }\n\n    if (opt.unindent_chained_methods) {\n      deindent();\n    }\n\n    if (last_type === TOKEN.RESERVED && is_special_word(flags.last_text)) {\n      output.space_before_token = false;\n    } else {\n      // allow preserved newlines before dots in general\n      // force newlines on dots after close paren when break_chained - for bar().baz()\n      allow_wrap_or_preserved_newline(flags.last_text === ')' && opt.break_chained_methods);\n    }\n\n    print_token();\n  }\n\n  function handle_unknown(preserve_statement_flags) {\n    print_token();\n\n    if (current_token.text[current_token.text.length - 1] === '\\n') {\n      print_newline(false, preserve_statement_flags);\n    }\n  }\n\n  function handle_eof() {\n    // Unwind any open statements\n    while (flags.mode === MODE.Statement) {\n      restore_mode();\n    }\n    handle_whitespace_and_comments(current_token);\n  }\n}\n\nmodule.exports.Beautifier = Beautifier;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\n// merges child options up with the parent options object\n// Example: obj = {a: 1, b: {a: 2}}\n//          mergeOpts(obj, 'b')\n//\n//          Returns: {a: 2, b: {a: 2}}\nfunction mergeOpts(allOptions, childFieldName) {\n  var finalOpts = {};\n  var name;\n\n  for (name in allOptions) {\n    if (name !== childFieldName) {\n      finalOpts[name] = allOptions[name];\n    }\n  }\n\n  //merge in the per type settings for the childFieldName\n  if (childFieldName in allOptions) {\n    for (name in allOptions[childFieldName]) {\n      finalOpts[name] = allOptions[childFieldName][name];\n    }\n  }\n  return finalOpts;\n}\n\nfunction normalizeOpts(options) {\n  var convertedOpts = {};\n  var key;\n\n  for (key in options) {\n    var newKey = key.replace(/-/g, \"_\");\n    convertedOpts[newKey] = options[key];\n  }\n  return convertedOpts;\n}\n\nmodule.exports.mergeOpts = mergeOpts;\nmodule.exports.normalizeOpts = normalizeOpts;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* jshint node: true, curly: false */\n// This section of code is taken from acorn.\n//\n// Acorn was written by Marijn Haverbeke and released under an MIT\n// license. The Unicode regexps (for identifiers and whitespace) were\n// taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/marijnh/acorn.git\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n\n\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\nvar baseASCIIidentifierStartChars = \"\\x24\\x40\\x41-\\x5a\\x5f\\x61-\\x7a\";\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar baseASCIIidentifierChars = \"\\x24\\x30-\\x39\\x41-\\x5a\\x5f\\x61-\\x7a\";\nvar nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n//var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n//var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nvar identifierStart = new RegExp(\"[\" + baseASCIIidentifierStartChars + nonASCIIidentifierStartChars + \"]\");\nvar identifierChars = new RegExp(\"[\" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nexports.identifier = new RegExp(\"[\" + baseASCIIidentifierStartChars + nonASCIIidentifierStartChars + \"][\" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]*\", 'g');\n\n\n// Whether a single character denotes a newline.\n\nexports.newline = /[\\n\\r\\u2028\\u2029]/;\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\n// in javascript, these two differ\n// in python they are the same, different methods are called on them\nexports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\nexports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n\n\n// Test whether a given character code starts an identifier.\n\nexports.isIdentifierStart = function(code) {\n  // // permit $ (36) and @ (64). @ is used in ES7 decorators.\n  // if (code < 65) return code === 36 || code === 64;\n  // // 65 through 91 are uppercase letters.\n  // if (code < 91) return true;\n  // // permit _ (95).\n  // if (code < 97) return code === 95;\n  // // 97 through 123 are lowercase letters.\n  // if (code < 123) return true;\n  return identifierStart.test(String.fromCharCode(code));\n};\n\n// Test whether a given character is part of an identifier.\n\nexports.isIdentifierChar = function(code) {\n  // if (code < 48) return code === 36;\n  // if (code < 58) return true;\n  // if (code < 65) return false;\n  // if (code < 91) return true;\n  // if (code < 97) return code === 95;\n  // if (code < 123) return true;\n  return identifierChars.test(String.fromCharCode(code));\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction OutputLine(parent) {\n  this.__parent = parent;\n  this.__character_count = 0;\n  // use indent_count as a marker for this.__lines that have preserved indentation\n  this.__indent_count = -1;\n  this.__alignment_count = 0;\n\n  this.__items = [];\n}\n\nOutputLine.prototype.item = function(index) {\n  if (index < 0) {\n    return this.__items[this.__items.length + index];\n  } else {\n    return this.__items[index];\n  }\n};\n\nOutputLine.prototype.has_match = function(pattern) {\n  for (var lastCheckedOutput = this.__items.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n    if (this.__items[lastCheckedOutput].match(pattern)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nOutputLine.prototype.set_indent = function(indent, alignment) {\n  this.__indent_count = indent || 0;\n  this.__alignment_count = alignment || 0;\n  this.__character_count = this.__parent.baseIndentLength + this.__alignment_count + this.__indent_count * this.__parent.indent_length;\n};\n\nOutputLine.prototype.get_character_count = function() {\n  return this.__character_count;\n};\n\nOutputLine.prototype.is_empty = function() {\n  return this.__items.length === 0;\n};\n\nOutputLine.prototype.last = function() {\n  if (!this.is_empty()) {\n    return this.__items[this.__items.length - 1];\n  } else {\n    return null;\n  }\n};\n\nOutputLine.prototype.push = function(item) {\n  this.__items.push(item);\n  this.__character_count += item.length;\n};\n\nOutputLine.prototype.push_raw = function(item) {\n  this.push(item);\n  var last_newline_index = item.lastIndexOf('\\n');\n  if (last_newline_index !== -1) {\n    this.__character_count = item.length - last_newline_index;\n  }\n};\n\nOutputLine.prototype.pop = function() {\n  var item = null;\n  if (!this.is_empty()) {\n    item = this.__items.pop();\n    this.__character_count -= item.length;\n  }\n  return item;\n};\n\nOutputLine.prototype.remove_indent = function() {\n  if (this.__indent_count > 0) {\n    this.__indent_count -= 1;\n    this.__character_count -= this.__parent.indent_length;\n  }\n};\n\nOutputLine.prototype.trim = function() {\n  while (this.last() === ' ') {\n    this.__items.pop();\n    this.__character_count -= 1;\n  }\n};\n\nOutputLine.prototype.toString = function() {\n  var result = '';\n  if (!this.is_empty()) {\n    if (this.__indent_count >= 0) {\n      result = this.__parent.get_indent_string(this.__indent_count);\n    }\n    if (this.__alignment_count >= 0) {\n      result += this.__parent.get_alignment_string(this.__alignment_count);\n    }\n    result += this.__items.join('');\n  }\n  return result;\n};\n\nfunction IndentCache(base_string, level_string) {\n  this.__cache = [base_string];\n  this.__level_string = level_string;\n}\n\nIndentCache.prototype.__ensure_cache = function(level) {\n  while (level >= this.__cache.length) {\n    this.__cache.push(this.__cache[this.__cache.length - 1] + this.__level_string);\n  }\n};\n\nIndentCache.prototype.get_level_string = function(level) {\n  this.__ensure_cache(level);\n  return this.__cache[level];\n};\n\n\nfunction Output(indent_string, baseIndentString) {\n  baseIndentString = baseIndentString || '';\n  this.__indent_cache = new IndentCache(baseIndentString, indent_string);\n  this.__alignment_cache = new IndentCache('', ' ');\n  this.baseIndentLength = baseIndentString.length;\n  this.indent_length = indent_string.length;\n  this.raw = false;\n\n  this.__lines = [];\n  this.previous_line = null;\n  this.current_line = null;\n  this.space_before_token = false;\n  // initialize\n  this.__add_outputline();\n}\n\nOutput.prototype.__add_outputline = function() {\n  this.previous_line = this.current_line;\n  this.current_line = new OutputLine(this);\n  this.__lines.push(this.current_line);\n};\n\nOutput.prototype.get_line_number = function() {\n  return this.__lines.length;\n};\n\nOutput.prototype.get_indent_string = function(level) {\n  return this.__indent_cache.get_level_string(level);\n};\n\nOutput.prototype.get_alignment_string = function(level) {\n  return this.__alignment_cache.get_level_string(level);\n};\n\nOutput.prototype.is_empty = function() {\n  return !this.previous_line && this.current_line.is_empty();\n};\n\nOutput.prototype.add_new_line = function(force_newline) {\n  // never newline at the start of file\n  // otherwise, newline only if we didn't just add one or we're forced\n  if (this.is_empty() ||\n    (!force_newline && this.just_added_newline())) {\n    return false;\n  }\n\n  // if raw output is enabled, don't print additional newlines,\n  // but still return True as though you had\n  if (!this.raw) {\n    this.__add_outputline();\n  }\n  return true;\n};\n\nOutput.prototype.get_code = function(end_with_newline, eol) {\n  var sweet_code = this.__lines.join('\\n').replace(/[\\r\\n\\t ]+$/, '');\n\n  if (end_with_newline) {\n    sweet_code += '\\n';\n  }\n\n  if (eol !== '\\n') {\n    sweet_code = sweet_code.replace(/[\\n]/g, eol);\n  }\n\n  return sweet_code;\n};\n\nOutput.prototype.set_indent = function(indent, alignment) {\n  indent = indent || 0;\n  alignment = alignment || 0;\n\n  // Never indent your first output indent at the start of the file\n  if (this.__lines.length > 1) {\n    this.current_line.set_indent(indent, alignment);\n    return true;\n  }\n  this.current_line.set_indent();\n  return false;\n};\n\nOutput.prototype.add_raw_token = function(token) {\n  for (var x = 0; x < token.newlines; x++) {\n    this.__add_outputline();\n  }\n  this.current_line.push(token.whitespace_before);\n  this.current_line.push_raw(token.text);\n  this.space_before_token = false;\n};\n\nOutput.prototype.add_token = function(printable_token) {\n  this.add_space_before_token();\n  this.current_line.push(printable_token);\n};\n\nOutput.prototype.add_space_before_token = function() {\n  if (this.space_before_token && !this.just_added_newline()) {\n    this.current_line.push(' ');\n  }\n  this.space_before_token = false;\n};\n\nOutput.prototype.remove_indent = function(index) {\n  var output_length = this.__lines.length;\n  while (index < output_length) {\n    this.__lines[index].remove_indent();\n    index++;\n  }\n};\n\nOutput.prototype.trim = function(eat_newlines) {\n  eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;\n\n  this.current_line.trim(this.indent_string, this.baseIndentString);\n\n  while (eat_newlines && this.__lines.length > 1 &&\n    this.current_line.is_empty()) {\n    this.__lines.pop();\n    this.current_line = this.__lines[this.__lines.length - 1];\n    this.current_line.trim();\n  }\n\n  this.previous_line = this.__lines.length > 1 ?\n    this.__lines[this.__lines.length - 2] : null;\n};\n\nOutput.prototype.just_added_newline = function() {\n  return this.current_line.is_empty();\n};\n\nOutput.prototype.just_added_blankline = function() {\n  return this.is_empty() ||\n    (this.current_line.is_empty() && this.previous_line.is_empty());\n};\n\nOutput.prototype.ensure_empty_line_above = function(starts_with, ends_with) {\n  var index = this.__lines.length - 2;\n  while (index >= 0) {\n    var potentialEmptyLine = this.__lines[index];\n    if (potentialEmptyLine.is_empty()) {\n      break;\n    } else if (potentialEmptyLine.item(0).indexOf(starts_with) !== 0 &&\n      potentialEmptyLine.item(-1) !== ends_with) {\n      this.__lines.splice(index + 1, 0, new OutputLine(this));\n      this.previous_line = this.__lines[this.__lines.length - 2];\n      break;\n    }\n    index--;\n  }\n};\n\nmodule.exports.Output = Output;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar InputScanner = __webpack_require__(6).InputScanner;\nvar BaseTokenizer = __webpack_require__(7).Tokenizer;\nvar BASETOKEN = __webpack_require__(7).TOKEN;\nvar acorn = __webpack_require__(3);\nvar Directives = __webpack_require__(10).Directives;\n\nfunction in_array(what, arr) {\n  return arr.indexOf(what) !== -1;\n}\n\n\nvar TOKEN = {\n  START_EXPR: 'TK_START_EXPR',\n  END_EXPR: 'TK_END_EXPR',\n  START_BLOCK: 'TK_START_BLOCK',\n  END_BLOCK: 'TK_END_BLOCK',\n  WORD: 'TK_WORD',\n  RESERVED: 'TK_RESERVED',\n  SEMICOLON: 'TK_SEMICOLON',\n  STRING: 'TK_STRING',\n  EQUALS: 'TK_EQUALS',\n  OPERATOR: 'TK_OPERATOR',\n  COMMA: 'TK_COMMA',\n  BLOCK_COMMENT: 'TK_BLOCK_COMMENT',\n  COMMENT: 'TK_COMMENT',\n  DOT: 'TK_DOT',\n  UNKNOWN: 'TK_UNKNOWN',\n  START: BASETOKEN.START,\n  RAW: BASETOKEN.RAW,\n  EOF: BASETOKEN.EOF\n};\n\n\nvar directives_core = new Directives(/\\/\\*/, /\\*\\//);\n\nvar number_pattern = /0[xX][0123456789abcdefABCDEF]*|0[oO][01234567]*|0[bB][01]*|\\d+n|(?:\\.\\d+|\\d+\\.?\\d*)(?:[eE][+-]?\\d+)?/g;\n\nvar digit = /[0-9]/;\n\n// Dot \".\" must be distinguished from \"...\" and decimal\nvar dot_pattern = /[^\\d\\.]/;\n\nvar positionable_operators = (\n  \">>> === !== \" +\n  \"<< && >= ** != == <= >> || \" +\n  \"< / - + > : & % ? ^ | *\").split(' ');\n\n// IMPORTANT: this must be sorted longest to shortest or tokenizing many not work.\n// Also, you must update possitionable operators separately from punct\nvar punct =\n  \">>>= \" +\n  \"... >>= <<= === >>> !== **= \" +\n  \"=> ^= :: /= << <= == && -= >= >> != -- += ** || ++ %= &= *= |= \" +\n  \"= ! ? > < : / ^ - + * & % ~ |\";\n\npunct = punct.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\npunct = punct.replace(/ /g, '|');\n\nvar punct_pattern = new RegExp(punct, 'g');\n\n// words which should always start on new line.\nvar line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');\nvar reserved_words = line_starters.concat(['do', 'in', 'of', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await', 'from', 'as']);\nvar reserved_word_pattern = new RegExp('^(?:' + reserved_words.join('|') + ')$');\n\n//  /* ... */ comment ends with nearest */ or end of file\nvar block_comment_pattern = /\\/\\*(?:[\\s\\S]*?)((?:\\*\\/)|$)/g;\n\n// comment ends just before nearest linefeed or end of file\nvar comment_pattern = /\\/\\/(?:[^\\n\\r\\u2028\\u2029]*)/g;\n\nvar template_pattern = /(?:(?:<\\?php|<\\?=)[\\s\\S]*?\\?>)|(?:<%[\\s\\S]*?%>)/g;\n\nvar in_html_comment;\n\nvar Tokenizer = function(input_string, options) {\n  BaseTokenizer.call(this, input_string, options);\n  this.positionable_operators = positionable_operators;\n  this.line_starters = line_starters;\n};\nTokenizer.prototype = new BaseTokenizer();\n\nTokenizer.prototype._is_comment = function(current_token) {\n  return current_token.type === TOKEN.COMMENT || current_token.type === TOKEN.BLOCK_COMMENT || current_token.type === TOKEN.UNKNOWN;\n};\n\nTokenizer.prototype._is_opening = function(current_token) {\n  return current_token.type === TOKEN.START_BLOCK || current_token.type === TOKEN.START_EXPR;\n};\n\nTokenizer.prototype._is_closing = function(current_token, open_token) {\n  return (current_token.type === TOKEN.END_BLOCK || current_token.type === TOKEN.END_EXPR) &&\n    (open_token && (\n      (current_token.text === ']' && open_token.text === '[') ||\n      (current_token.text === ')' && open_token.text === '(') ||\n      (current_token.text === '}' && open_token.text === '{')));\n};\n\nTokenizer.prototype._reset = function() {\n  in_html_comment = false;\n};\n\nTokenizer.prototype._get_next_token = function(previous_token, open_token) { // jshint unused:false\n  this._readWhitespace();\n  var token = null;\n  var c = this._input.peek();\n\n  token = token || this._read_singles(c);\n  token = token || this._read_word(previous_token);\n  token = token || this._read_comment(c);\n  token = token || this._read_string(c);\n  token = token || this._read_regexp(c, previous_token);\n  token = token || this._read_xml(c, previous_token);\n  token = token || this._read_non_javascript(c);\n  token = token || this._read_punctuation();\n  token = token || this._create_token(TOKEN.UNKNOWN, this._input.next());\n\n  return token;\n};\n\nTokenizer.prototype._read_word = function(previous_token) {\n  var resulting_string;\n  resulting_string = this._input.read(acorn.identifier);\n  if (resulting_string !== '') {\n    if (!(previous_token.type === TOKEN.DOT ||\n        (previous_token.type === TOKEN.RESERVED && (previous_token.text === 'set' || previous_token.text === 'get'))) &&\n      reserved_word_pattern.test(resulting_string)) {\n      if (resulting_string === 'in' || resulting_string === 'of') { // hack for 'in' and 'of' operators\n        return this._create_token(TOKEN.OPERATOR, resulting_string);\n      }\n      return this._create_token(TOKEN.RESERVED, resulting_string);\n    }\n\n    return this._create_token(TOKEN.WORD, resulting_string);\n  }\n\n  resulting_string = this._input.read(number_pattern);\n  if (resulting_string !== '') {\n    return this._create_token(TOKEN.WORD, resulting_string);\n  }\n};\n\nTokenizer.prototype._read_singles = function(c) {\n  var token = null;\n  if (c === null) {\n    token = this._create_token(TOKEN.EOF, '');\n  } else if (c === '(' || c === '[') {\n    token = this._create_token(TOKEN.START_EXPR, c);\n  } else if (c === ')' || c === ']') {\n    token = this._create_token(TOKEN.END_EXPR, c);\n  } else if (c === '{') {\n    token = this._create_token(TOKEN.START_BLOCK, c);\n  } else if (c === '}') {\n    token = this._create_token(TOKEN.END_BLOCK, c);\n  } else if (c === ';') {\n    token = this._create_token(TOKEN.SEMICOLON, c);\n  } else if (c === '.' && dot_pattern.test(this._input.peek(1))) {\n    token = this._create_token(TOKEN.DOT, c);\n  } else if (c === ',') {\n    token = this._create_token(TOKEN.COMMA, c);\n  }\n\n  if (token) {\n    this._input.next();\n  }\n  return token;\n};\n\nTokenizer.prototype._read_punctuation = function() {\n  var resulting_string = this._input.read(punct_pattern);\n\n  if (resulting_string !== '') {\n    if (resulting_string === '=') {\n      return this._create_token(TOKEN.EQUALS, resulting_string);\n    } else {\n      return this._create_token(TOKEN.OPERATOR, resulting_string);\n    }\n  }\n};\n\nTokenizer.prototype._read_non_javascript = function(c) {\n  var resulting_string = '';\n\n  if (c === '#') {\n    c = this._input.next();\n\n    if (this._is_first_token() && this._input.peek() === '!') {\n      // shebang\n      resulting_string = c;\n      while (this._input.hasNext() && c !== '\\n') {\n        c = this._input.next();\n        resulting_string += c;\n      }\n      return this._create_token(TOKEN.UNKNOWN, resulting_string.trim() + '\\n');\n    }\n\n    // Spidermonkey-specific sharp variables for circular references. Considered obsolete.\n    var sharp = '#';\n    if (this._input.hasNext() && this._input.testChar(digit)) {\n      do {\n        c = this._input.next();\n        sharp += c;\n      } while (this._input.hasNext() && c !== '#' && c !== '=');\n      if (c === '#') {\n        //\n      } else if (this._input.peek() === '[' && this._input.peek(1) === ']') {\n        sharp += '[]';\n        this._input.next();\n        this._input.next();\n      } else if (this._input.peek() === '{' && this._input.peek(1) === '}') {\n        sharp += '{}';\n        this._input.next();\n        this._input.next();\n      }\n      return this._create_token(TOKEN.WORD, sharp);\n    }\n\n    this._input.back();\n\n  } else if (c === '<') {\n    if (this._input.peek(1) === '?' || this._input.peek(1) === '%') {\n      resulting_string = this._input.read(template_pattern);\n      if (resulting_string) {\n        resulting_string = resulting_string.replace(acorn.allLineBreaks, '\\n');\n        return this._create_token(TOKEN.STRING, resulting_string);\n      }\n    } else if (this._input.match(/<\\!--/g)) {\n      c = '<!--';\n      while (this._input.hasNext() && !this._input.testChar(acorn.newline)) {\n        c += this._input.next();\n      }\n      in_html_comment = true;\n      return this._create_token(TOKEN.COMMENT, c);\n    }\n  } else if (c === '-' && in_html_comment && this._input.match(/-->/g)) {\n    in_html_comment = false;\n    return this._create_token(TOKEN.COMMENT, '-->');\n  }\n\n  return null;\n};\n\nTokenizer.prototype._read_comment = function(c) {\n  var token = null;\n  if (c === '/') {\n    var comment = '';\n    if (this._input.peek(1) === '*') {\n      // peek for comment /* ... */\n      comment = this._input.read(block_comment_pattern);\n      var directives = directives_core.get_directives(comment);\n      if (directives && directives.ignore === 'start') {\n        comment += directives_core.readIgnored(this._input);\n      }\n      comment = comment.replace(acorn.allLineBreaks, '\\n');\n      token = this._create_token(TOKEN.BLOCK_COMMENT, comment);\n      token.directives = directives;\n    } else if (this._input.peek(1) === '/') {\n      // peek for comment // ...\n      comment = this._input.read(comment_pattern);\n      token = this._create_token(TOKEN.COMMENT, comment);\n    }\n  }\n  return token;\n};\n\nTokenizer.prototype._read_string = function(c) {\n  if (c === '`' || c === \"'\" || c === '\"') {\n    var resulting_string = this._input.next();\n    this.has_char_escapes = false;\n\n    if (c === '`') {\n      resulting_string += this._read_string_recursive('`', true, '${');\n    } else {\n      resulting_string += this._read_string_recursive(c);\n    }\n\n    if (this.has_char_escapes && this._options.unescape_strings) {\n      resulting_string = unescape_string(resulting_string);\n    }\n    if (this._input.peek() === c) {\n      resulting_string += this._input.next();\n    }\n\n    return this._create_token(TOKEN.STRING, resulting_string);\n  }\n\n  return null;\n};\n\nTokenizer.prototype._allow_regexp_or_xml = function(previous_token) {\n  // regex and xml can only appear in specific locations during parsing\n  return (previous_token.type === TOKEN.RESERVED && in_array(previous_token.text, ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield'])) ||\n    (previous_token.type === TOKEN.END_EXPR && previous_token.text === ')' &&\n      previous_token.opened.previous.type === TOKEN.RESERVED && in_array(previous_token.opened.previous.text, ['if', 'while', 'for'])) ||\n    (in_array(previous_token.type, [TOKEN.COMMENT, TOKEN.START_EXPR, TOKEN.START_BLOCK, TOKEN.START,\n      TOKEN.END_BLOCK, TOKEN.OPERATOR, TOKEN.EQUALS, TOKEN.EOF, TOKEN.SEMICOLON, TOKEN.COMMA\n    ]));\n};\n\nTokenizer.prototype._read_regexp = function(c, previous_token) {\n\n  if (c === '/' && this._allow_regexp_or_xml(previous_token)) {\n    // handle regexp\n    //\n    var resulting_string = this._input.next();\n    var esc = false;\n\n    var in_char_class = false;\n    while (this._input.hasNext() &&\n      ((esc || in_char_class || this._input.peek() !== c) &&\n        !this._input.testChar(acorn.newline))) {\n      resulting_string += this._input.peek();\n      if (!esc) {\n        esc = this._input.peek() === '\\\\';\n        if (this._input.peek() === '[') {\n          in_char_class = true;\n        } else if (this._input.peek() === ']') {\n          in_char_class = false;\n        }\n      } else {\n        esc = false;\n      }\n      this._input.next();\n    }\n\n    if (this._input.peek() === c) {\n      resulting_string += this._input.next();\n\n      // regexps may have modifiers /regexp/MOD , so fetch those, too\n      // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.\n      resulting_string += this._input.read(acorn.identifier);\n    }\n    return this._create_token(TOKEN.STRING, resulting_string);\n  }\n  return null;\n};\n\n\nvar startXmlRegExp = /<()([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\nvar xmlRegExp = /[\\s\\S]*?<(\\/?)([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/g;\n\nTokenizer.prototype._read_xml = function(c, previous_token) {\n\n  if (this._options.e4x && c === \"<\" && this._input.test(startXmlRegExp) && this._allow_regexp_or_xml(previous_token)) {\n    // handle e4x xml literals\n    //\n    var xmlStr = '';\n    var match = this._input.match(startXmlRegExp);\n    if (match) {\n      // Trim root tag to attempt to\n      var rootTag = match[2].replace(/^{\\s+/, '{').replace(/\\s+}$/, '}');\n      var isCurlyRoot = rootTag.indexOf('{') === 0;\n      var depth = 0;\n      while (match) {\n        var isEndTag = !!match[1];\n        var tagName = match[2];\n        var isSingletonTag = (!!match[match.length - 1]) || (tagName.slice(0, 8) === \"![CDATA[\");\n        if (!isSingletonTag &&\n          (tagName === rootTag || (isCurlyRoot && tagName.replace(/^{\\s+/, '{').replace(/\\s+}$/, '}')))) {\n          if (isEndTag) {\n            --depth;\n          } else {\n            ++depth;\n          }\n        }\n        xmlStr += match[0];\n        if (depth <= 0) {\n          break;\n        }\n        match = this._input.match(xmlRegExp);\n      }\n      // if we didn't close correctly, keep unformatted.\n      if (!match) {\n        xmlStr += this._input.match(/[\\s\\S]*/g)[0];\n      }\n      xmlStr = xmlStr.replace(acorn.allLineBreaks, '\\n');\n      return this._create_token(TOKEN.STRING, xmlStr);\n    }\n  }\n\n  return null;\n};\n\nfunction unescape_string(s) {\n  // You think that a regex would work for this\n  // return s.replace(/\\\\x([0-9a-f]{2})/gi, function(match, val) {\n  //         return String.fromCharCode(parseInt(val, 16));\n  //     })\n  // However, dealing with '\\xff', '\\\\xff', '\\\\\\xff' makes this more fun.\n  var out = '',\n    escaped = 0;\n\n  var input_scan = new InputScanner(s);\n  var matched = null;\n\n  while (input_scan.hasNext()) {\n    // Keep any whitespace, non-slash characters\n    // also keep slash pairs.\n    matched = input_scan.match(/([\\s]|[^\\\\]|\\\\\\\\)+/g);\n\n    if (matched) {\n      out += matched[0];\n    }\n\n    if (input_scan.peek() === '\\\\') {\n      input_scan.next();\n      if (input_scan.peek() === 'x') {\n        matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);\n      } else if (input_scan.peek() === 'u') {\n        matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);\n      } else {\n        out += '\\\\';\n        if (input_scan.hasNext()) {\n          out += input_scan.next();\n        }\n        continue;\n      }\n\n      // If there's some error decoding, return the original string\n      if (!matched) {\n        return s;\n      }\n\n      escaped = parseInt(matched[1], 16);\n\n      if (escaped > 0x7e && escaped <= 0xff && matched[0].indexOf('x') === 0) {\n        // we bail out on \\x7f..\\xff,\n        // leaving whole string escaped,\n        // as it's probably completely binary\n        return s;\n      } else if (escaped >= 0x00 && escaped < 0x20) {\n        // leave 0x00...0x1f escaped\n        out += '\\\\' + matched[0];\n        continue;\n      } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {\n        // single-quote, apostrophe, backslash - escape these\n        out += '\\\\' + String.fromCharCode(escaped);\n      } else {\n        out += String.fromCharCode(escaped);\n      }\n    }\n  }\n\n  return out;\n}\n\n// handle string\n//\nTokenizer.prototype._read_string_recursive = function(delimiter, allow_unescaped_newlines, start_sub) {\n  // Template strings can travers lines without escape characters.\n  // Other strings cannot\n  var current_char;\n  var resulting_string = '';\n  var esc = false;\n  while (this._input.hasNext()) {\n    current_char = this._input.peek();\n    if (!(esc || (current_char !== delimiter &&\n        (allow_unescaped_newlines || !acorn.newline.test(current_char))))) {\n      break;\n    }\n\n    // Handle \\r\\n linebreaks after escapes or in template strings\n    if ((esc || allow_unescaped_newlines) && acorn.newline.test(current_char)) {\n      if (current_char === '\\r' && this._input.peek(1) === '\\n') {\n        this._input.next();\n        current_char = this._input.peek();\n      }\n      resulting_string += '\\n';\n    } else {\n      resulting_string += current_char;\n    }\n\n    if (esc) {\n      if (current_char === 'x' || current_char === 'u') {\n        this.has_char_escapes = true;\n      }\n      esc = false;\n    } else {\n      esc = current_char === '\\\\';\n    }\n\n    this._input.next();\n\n    if (start_sub && resulting_string.indexOf(start_sub, resulting_string.length - start_sub.length) !== -1) {\n      if (delimiter === '`') {\n        resulting_string += this._read_string_recursive('}', allow_unescaped_newlines, '`');\n      } else {\n        resulting_string += this._read_string_recursive('`', allow_unescaped_newlines, '${');\n      }\n\n      if (this._input.hasNext()) {\n        resulting_string += this._input.next();\n      }\n    }\n  }\n\n  return resulting_string;\n};\n\n\n\nmodule.exports.Tokenizer = Tokenizer;\nmodule.exports.TOKEN = TOKEN;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction InputScanner(input_string) {\n  this.__input = input_string || '';\n  this.__input_length = this.__input.length;\n  this.__position = 0;\n}\n\nInputScanner.prototype.restart = function() {\n  this.__position = 0;\n};\n\nInputScanner.prototype.back = function() {\n  if (this.__position > 0) {\n    this.__position -= 1;\n  }\n};\n\nInputScanner.prototype.hasNext = function() {\n  return this.__position < this.__input_length;\n};\n\nInputScanner.prototype.next = function() {\n  var val = null;\n  if (this.hasNext()) {\n    val = this.__input.charAt(this.__position);\n    this.__position += 1;\n  }\n  return val;\n};\n\nInputScanner.prototype.peek = function(index) {\n  var val = null;\n  index = index || 0;\n  index += this.__position;\n  if (index >= 0 && index < this.__input_length) {\n    val = this.__input.charAt(index);\n  }\n  return val;\n};\n\nInputScanner.prototype.test = function(pattern, index) {\n  index = index || 0;\n  index += this.__position;\n  pattern.lastIndex = index;\n\n  if (index >= 0 && index < this.__input_length) {\n    var pattern_match = pattern.exec(this.__input);\n    return pattern_match && pattern_match.index === index;\n  } else {\n    return false;\n  }\n};\n\nInputScanner.prototype.testChar = function(pattern, index) {\n  // test one character regex match\n  var val = this.peek(index);\n  return val !== null && pattern.test(val);\n};\n\nInputScanner.prototype.match = function(pattern) {\n  pattern.lastIndex = this.__position;\n  var pattern_match = pattern.exec(this.__input);\n  if (pattern_match && pattern_match.index === this.__position) {\n    this.__position += pattern_match[0].length;\n  } else {\n    pattern_match = null;\n  }\n  return pattern_match;\n};\n\nInputScanner.prototype.read = function(pattern) {\n  var val = '';\n  var match = this.match(pattern);\n  if (match) {\n    val = match[0];\n  }\n  return val;\n};\n\nInputScanner.prototype.readUntil = function(pattern, include_match) {\n  var val = '';\n  var match_index = this.__position;\n  pattern.lastIndex = this.__position;\n  var pattern_match = pattern.exec(this.__input);\n  if (pattern_match) {\n    if (include_match) {\n      match_index = pattern_match.index + pattern_match[0].length;\n    } else {\n      match_index = pattern_match.index;\n    }\n  } else {\n    match_index = this.__input_length;\n  }\n\n  val = this.__input.substring(this.__position, match_index);\n  this.__position = match_index;\n  return val;\n};\n\nInputScanner.prototype.readUntilAfter = function(pattern) {\n  return this.readUntil(pattern, true);\n};\n\n/* css beautifier legacy helpers */\nInputScanner.prototype.peekUntilAfter = function(pattern) {\n  var start = this.__position;\n  var val = this.readUntilAfter(pattern);\n  this.__position = start;\n  return val;\n};\n\nInputScanner.prototype.lookBack = function(testVal) {\n  var start = this.__position - 1;\n  return start >= testVal.length && this.__input.substring(start - testVal.length, start)\n    .toLowerCase() === testVal;\n};\n\n\nmodule.exports.InputScanner = InputScanner;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar InputScanner = __webpack_require__(6).InputScanner;\nvar Token = __webpack_require__(8).Token;\nvar TokenStream = __webpack_require__(9).TokenStream;\n\nvar TOKEN = {\n  START: 'TK_START',\n  RAW: 'TK_RAW',\n  EOF: 'TK_EOF'\n};\n\nvar Tokenizer = function(input_string, options) {\n  this._input = new InputScanner(input_string);\n  this._options = options || {};\n  this.__tokens = null;\n  this.__newline_count = 0;\n  this.__whitespace_before_token = '';\n\n  this._whitespace_pattern = /[\\n\\r\\u2028\\u2029\\t\\u000B\\u00A0\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff ]+/g;\n  this._newline_pattern = /([^\\n\\r\\u2028\\u2029]*)(\\r\\n|[\\n\\r\\u2028\\u2029])?/g;\n};\n\nTokenizer.prototype.tokenize = function() {\n  this._input.restart();\n  this.__tokens = new TokenStream();\n\n  this._reset();\n\n  var current;\n  var previous = new Token(TOKEN.START, '');\n  var open_token = null;\n  var open_stack = [];\n  var comments = new TokenStream();\n\n  while (previous.type !== TOKEN.EOF) {\n    current = this._get_next_token(previous, open_token);\n    while (this._is_comment(current)) {\n      comments.add(current);\n      current = this._get_next_token(previous, open_token);\n    }\n\n    if (!comments.isEmpty()) {\n      current.comments_before = comments;\n      comments = new TokenStream();\n    }\n\n    current.parent = open_token;\n\n    if (this._is_opening(current)) {\n      open_stack.push(open_token);\n      open_token = current;\n    } else if (open_token && this._is_closing(current, open_token)) {\n      current.opened = open_token;\n      open_token.closed = current;\n      open_token = open_stack.pop();\n      current.parent = open_token;\n    }\n\n    current.previous = previous;\n    previous.next = current;\n\n    this.__tokens.add(current);\n    previous = current;\n  }\n\n  return this.__tokens;\n};\n\n\nTokenizer.prototype._is_first_token = function() {\n  return this.__tokens.isEmpty();\n};\n\nTokenizer.prototype._reset = function() {};\n\nTokenizer.prototype._get_next_token = function(previous_token, open_token) { // jshint unused:false\n  this._readWhitespace();\n  var resulting_string = this._input.read(/.+/g);\n  if (resulting_string) {\n    return this._create_token(TOKEN.RAW, resulting_string);\n  } else {\n    return this._create_token(TOKEN.EOF, '');\n  }\n};\n\nTokenizer.prototype._is_comment = function(current_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._is_opening = function(current_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._is_closing = function(current_token, open_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._create_token = function(type, text) {\n  var token = new Token(type, text, this.__newline_count, this.__whitespace_before_token);\n  this.__newline_count = 0;\n  this.__whitespace_before_token = '';\n  return token;\n};\n\nTokenizer.prototype._readWhitespace = function() {\n  var resulting_string = this._input.read(this._whitespace_pattern);\n  if (resulting_string === ' ') {\n    this.__whitespace_before_token = resulting_string;\n  } else if (resulting_string !== '') {\n    this._newline_pattern.lastIndex = 0;\n    var nextMatch = this._newline_pattern.exec(resulting_string);\n    while (nextMatch[2]) {\n      this.__newline_count += 1;\n      nextMatch = this._newline_pattern.exec(resulting_string);\n    }\n    this.__whitespace_before_token = nextMatch[1];\n  }\n};\n\n\n\nmodule.exports.Tokenizer = Tokenizer;\nmodule.exports.TOKEN = TOKEN;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Token(type, text, newlines, whitespace_before) {\n  this.type = type;\n  this.text = text;\n\n  // comments_before are\n  // comments that have a new line before them\n  // and may or may not have a newline after\n  // this is a set of comments before\n  this.comments_before = null; /* inline comment*/\n\n\n  // this.comments_after =  new TokenStream(); // no new line before and newline after\n  this.newlines = newlines || 0;\n  this.whitespace_before = whitespace_before || '';\n  this.parent = null;\n  this.next = null;\n  this.previous = null;\n  this.opened = null;\n  this.closed = null;\n  this.directives = null;\n}\n\n\nmodule.exports.Token = Token;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction TokenStream(parent_token) {\n  // private\n  this.__tokens = [];\n  this.__tokens_length = this.__tokens.length;\n  this.__position = 0;\n  this.__parent_token = parent_token;\n}\n\nTokenStream.prototype.restart = function() {\n  this.__position = 0;\n};\n\nTokenStream.prototype.isEmpty = function() {\n  return this.__tokens_length === 0;\n};\n\nTokenStream.prototype.hasNext = function() {\n  return this.__position < this.__tokens_length;\n};\n\nTokenStream.prototype.next = function() {\n  var val = null;\n  if (this.hasNext()) {\n    val = this.__tokens[this.__position];\n    this.__position += 1;\n  }\n  return val;\n};\n\nTokenStream.prototype.peek = function(index) {\n  var val = null;\n  index = index || 0;\n  index += this.__position;\n  if (index >= 0 && index < this.__tokens_length) {\n    val = this.__tokens[index];\n  }\n  return val;\n};\n\nTokenStream.prototype.add = function(token) {\n  if (this.__parent_token) {\n    token.parent = this.__parent_token;\n  }\n  this.__tokens.push(token);\n  this.__tokens_length += 1;\n};\n\nmodule.exports.TokenStream = TokenStream;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Directives(start_block_pattern, end_block_pattern) {\n  start_block_pattern = typeof start_block_pattern === 'string' ? start_block_pattern : start_block_pattern.source;\n  end_block_pattern = typeof end_block_pattern === 'string' ? end_block_pattern : end_block_pattern.source;\n  this.__directives_block_pattern = new RegExp(start_block_pattern + / beautify( \\w+[:]\\w+)+ /.source + end_block_pattern, 'g');\n  this.__directive_pattern = / (\\w+)[:](\\w+)/g;\n\n  this.__directives_end_ignore_pattern = new RegExp('(?:[\\\\s\\\\S]*?)((?:' + start_block_pattern + /\\sbeautify\\signore:end\\s/.source + end_block_pattern + ')|$)', 'g');\n}\n\nDirectives.prototype.get_directives = function(text) {\n  if (!text.match(this.__directives_block_pattern)) {\n    return null;\n  }\n\n  var directives = {};\n  this.__directive_pattern.lastIndex = 0;\n  var directive_match = this.__directive_pattern.exec(text);\n\n  while (directive_match) {\n    directives[directive_match[1]] = directive_match[2];\n    directive_match = this.__directive_pattern.exec(text);\n  }\n\n  return directives;\n};\n\nDirectives.prototype.readIgnored = function(input) {\n  return input.read(this.__directives_end_ignore_pattern);\n};\n\n\nmodule.exports.Directives = Directives;\n\n/***/ })\n/******/ ]);\nvar js_beautify = legacy_beautify_js;\n/* Footer */\nif (typeof define === \"function\" && define.amd) {\n    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n    define([], function() {\n        return { js_beautify: js_beautify };\n    });\n} else if (typeof exports !== \"undefined\") {\n    // Add support for CommonJS. Just put this file somewhere on your require.paths\n    // and you will be able to `var js_beautify = require(\"beautify\").js_beautify`.\n    exports.js_beautify = js_beautify;\n} else if (typeof window !== \"undefined\") {\n    // If we're running a web page and don't have either of the above, add our one global\n    window.js_beautify = js_beautify;\n} else if (typeof global !== \"undefined\") {\n    // If we don't even have window, try global.\n    global.js_beautify = js_beautify;\n}\n\n}());\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nvar _globalVars;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nmodule.exports = {\n  globalScope: 'p5',\n  globalVars: (_globalVars = {\n    // Map methods\n    pushMatrix: 'push',\n    popMatrix: 'pop',\n    size: 'createCanvas',\n    println: 'print',\n    // Methods\n    alpha: true,\n    blue: true,\n    brightness: true,\n    color: true,\n    green: true,\n    hue: true,\n    lerpColor: true,\n    lightness: true,\n    red: true,\n    saturation: true,\n    background: true,\n    clear: true,\n    colorMode: true,\n    fill: true,\n    noFill: true,\n    noStroke: true,\n    stroke: true,\n    arc: true,\n    ellipse: true,\n    line: true,\n    point: true,\n    quad: true,\n    rect: true,\n    triangle: true,\n    ellipseMode: true,\n    noSmooth: true,\n    rectMode: true,\n    smooth: true,\n    strokeCap: true,\n    strokeJoin: true,\n    strokeWeight: true,\n    bezier: true,\n    bezierDetail: true,\n    bezierPoint: true,\n    bezierTangent: true,\n    curve: true,\n    curveDetail: true,\n    curveTightness: true,\n    curvePoint: true,\n    curveTangent: true,\n    beginContour: true,\n    beginShape: true,\n    bezierVertex: true,\n    curveVertex: true,\n    endContour: true,\n    endShape: true,\n    quadraticVertex: true,\n    vertex: true,\n    loadModel: true,\n    model: true,\n    plane: true,\n    box: true,\n    sphere: true,\n    cylinder: true,\n    cone: true,\n    ellipsoid: true,\n    torus: true,\n    preload: true,\n    setup: true,\n    draw: true,\n    remove: true,\n    noLoop: true,\n    loop: true,\n    redraw: true,\n    print: true,\n    cursor: true,\n    frameRate: true,\n    noCursor: true,\n    windowResized: true,\n    fullscreen: true,\n    pixelDensity: true,\n    displayDensity: true,\n    getURL: true,\n    getURLPath: true,\n    getURLParams: true,\n    resizeCanvas: true,\n    noCanvas: true,\n    createGraphics: true,\n    blendMode: true,\n    setAttributes: true,\n    applyMatrix: true,\n    resetMatrix: true,\n    rotate: true,\n    rotateX: true,\n    rotateY: true,\n    rotateZ: true,\n    scale: true,\n    shearX: true,\n    shearY: true,\n    translate: true,\n    createStringDict: true,\n    createNumberDict: true,\n    append: true,\n    arrayCopy: true,\n    concat: true,\n    reverse: true,\n    shorten: true,\n    shuffle: true,\n    sort: true,\n    splice: true,\n    subset: true,\n    float: true,\n    int: true,\n    str: true,\n    boolean: true,\n    byte: true,\n    char: true,\n    unchar: true,\n    hex: true,\n    unhex: true,\n    join: true,\n    match: true,\n    matchAll: true,\n    nf: true,\n    nfc: true,\n    nfp: true,\n    nfs: true,\n    split: true,\n    splitTokens: true,\n    trim: true,\n    setMoveThreshold: true,\n    setShakeThreshold: true,\n    deviceMoved: true,\n    deviceTurned: true,\n    deviceShaken: true,\n    keyPressed: true,\n    keyReleased: true,\n    keyTyped: true,\n    keyIsDown: true,\n    mouseMoved: true,\n    mouseDragged: true,\n    mousePressed: true,\n    mouseReleased: true,\n    mouseClicked: true,\n    doubleClicked: true,\n    mouseWheel: true,\n    touchStarted: true,\n    touchMoved: true,\n    touchEnded: true,\n    createImage: true,\n    saveCanvas: true,\n    saveFrames: true,\n    loadImage: true,\n    image: true,\n    tint: true,\n    noTint: true,\n    imageMode: true,\n    blend: true,\n    copy: true,\n    filter: true,\n    get: true,\n    loadPixels: true,\n    set: true,\n    updatePixels: true,\n    loadJSON: true,\n    loadStrings: true,\n    loadTable: true,\n    loadXML: true,\n    loadBytes: true,\n    httpGet: true,\n    httpPost: true,\n    httpDo: true,\n    createWriter: true,\n    save: true,\n    saveJSON: true,\n    saveStrings: true,\n    saveTable: true,\n    day: true,\n    hour: true,\n    minute: true,\n    millis: true,\n    month: true,\n    second: true,\n    year: true,\n    createVector: true,\n    abs: true,\n    ceil: true,\n    constrain: true,\n    dist: true,\n    exp: true,\n    floor: true,\n    lerp: true,\n    log: true,\n    mag: true,\n    map: true,\n    max: true,\n    min: true,\n    norm: true,\n    pow: true,\n    round: true,\n    sq: true,\n    sqrt: true,\n    noise: true,\n    noiseDetail: true,\n    noiseSeed: true,\n    randomSeed: true,\n    random: true,\n    randomGaussian: true,\n    acos: true,\n    asin: true,\n    atan: true,\n    atan2: true,\n    cos: true,\n    sin: true,\n    tan: true,\n    degrees: true,\n    radians: true,\n    angleMode: true,\n    textAlign: true,\n    textLeading: true,\n    textSize: true,\n    textStyle: true,\n    textWidth: true,\n    textAscent: true,\n    textDescent: true,\n    loadFont: true,\n    text: true,\n    textFont: true,\n    camera: true,\n    perspective: true,\n    ortho: true,\n    orbitControl: true,\n    ambientLight: true,\n    directionalLight: true,\n    pointLight: true,\n    loadShader: true,\n    createShader: true,\n    shader: true,\n    normalMaterial: true,\n    texture: true,\n    ambientMaterial: true,\n    specularMaterial: true,\n    // Classes\n    Graphics: true,\n    Vector3: true,\n    // Constants\n    HALF_PI: true,\n    PI: true,\n    QUARTER_PI: true,\n    TAU: true,\n    TWO_PI: true,\n    DEGREES: true,\n    RADIANS: true,\n    LEFT: true,\n    CENTER: true,\n    RIGHT: true,\n    TOP: true,\n    BOTTOM: true,\n    BASELINE: true,\n    P2D: true,\n    WEBGL: true,\n    SQUARE: true,\n    PROJECT: true,\n    ROUND: true,\n    MITER: true,\n    BEVEL: true\n  }, _defineProperty(_globalVars, \"ROUND\", true), _defineProperty(_globalVars, \"CORNER\", true), _defineProperty(_globalVars, \"CORNERS\", true), _defineProperty(_globalVars, \"RADIUS\", true), _defineProperty(_globalVars, \"RGB\", true), _defineProperty(_globalVars, \"HSB\", true), _defineProperty(_globalVars, \"HSL\", true), _defineProperty(_globalVars, \"frameCount\", true), _defineProperty(_globalVars, \"focused\", true), _defineProperty(_globalVars, \"Color\", true), _defineProperty(_globalVars, \"displayWidth\", true), _defineProperty(_globalVars, \"displayHeight\", true), _defineProperty(_globalVars, \"windowWidth\", true), _defineProperty(_globalVars, \"windowHeight\", true), _defineProperty(_globalVars, \"width\", true), _defineProperty(_globalVars, \"height\", true), _defineProperty(_globalVars, \"deviceOrientation\", true), _defineProperty(_globalVars, \"accelerationX\", true), _defineProperty(_globalVars, \"accelerationY\", true), _defineProperty(_globalVars, \"accelerationZ\", true), _defineProperty(_globalVars, \"pAccelerationX\", true), _defineProperty(_globalVars, \"pAccelerationY\", true), _defineProperty(_globalVars, \"pAccelerationZ\", true), _defineProperty(_globalVars, \"rotationX\", true), _defineProperty(_globalVars, \"rotationY\", true), _defineProperty(_globalVars, \"rotationZ\", true), _defineProperty(_globalVars, \"pRotationX\", true), _defineProperty(_globalVars, \"pRotationY\", true), _defineProperty(_globalVars, \"pRotationZ\", true), _defineProperty(_globalVars, \"turnAxis\", true), _defineProperty(_globalVars, \"keyIsPressed\", true), _defineProperty(_globalVars, \"key\", true), _defineProperty(_globalVars, \"keyCode\", true), _defineProperty(_globalVars, \"mouseX\", true), _defineProperty(_globalVars, \"mouseY\", true), _defineProperty(_globalVars, \"pmouseX\", true), _defineProperty(_globalVars, \"pmouseY\", true), _defineProperty(_globalVars, \"winMouseX\", true), _defineProperty(_globalVars, \"winMouseY\", true), _defineProperty(_globalVars, \"pwinMouseX\", true), _defineProperty(_globalVars, \"pwinMouseY\", true), _defineProperty(_globalVars, \"mouseButton\", true), _defineProperty(_globalVars, \"mouseIsPressed\", true), _defineProperty(_globalVars, \"touches\", true), _defineProperty(_globalVars, \"pixels\", true), _globalVars)\n};\n\n},{}]},{},[1])(1)\n});\n"]}